//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Carronet.rdcar {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PesquisaLegacySoap", Namespace="http://tempuri.org/")]
    public partial class PesquisaLegacy : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AirportsCountry2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCodeByCityNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCityJQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCityNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCityNameJQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalsCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalsCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalsInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Rentals2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalsCity2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalsCountry2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalsInternational2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalLocationsCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalLocationsInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalLocationsCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalInfoInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSchedulesCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSchedulesInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSchedulesCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationInfoInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationHolidaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationWeekOperationCompleted;
        
        private System.Threading.SendOrPostCallback CityWeekScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback DsCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DsCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DsStatesCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DsStatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DsCitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DsAirlinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DsAirportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DsAirportsCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback DsAirportsStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DsAirportsCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChecksumAirportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChecksumCitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChecksumCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChecksumStatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChecksumRentalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChecksumRentalLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback VersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchGroupRentalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchWaitListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchAirportOperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchEquipTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchAutoCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchInternational2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchAutoCurrency2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchInternational3OperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchAutoCurrency3OperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchInternational4OperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleSearchAutoCurrency4OperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSearchGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSearchWaitListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSearchEquipTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSearchInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSearchAutoCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSearchInternational2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSearchAutoCurrency2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSearchInternational3OperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSearchAutoCurrency3OperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSearchInternational4OperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalSearchAutoCurrency4OperationCompleted;
        
        private System.Threading.SendOrPostCallback PassiveReserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveWaitlistOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveAutoCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Reserve2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveWaitlist2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveInternational2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveAutoCurrency2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveInternational3OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveAutoCurrency3OperationCompleted;
        
        private System.Threading.SendOrPostCallback PassiveCancelReserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelReserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelReserveInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelReserveAutoCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelReserveInternational2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelReserveAutoCurrency2OperationCompleted;
        
        private System.Threading.SendOrPostCallback PassiveModifyReserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyReserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyReserveInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyReserveAutoCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyReserveInternational2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyReserveAutoCurrency2OperationCompleted;
        
        private System.Threading.SendOrPostCallback PassiveViewReserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViewReserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViewReserveInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViewReserveAutoCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViewReserveInternational2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ViewReserveAutoCurrency2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CoverageTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EquipTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurposesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InformationTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RentalsList2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CoverageTypesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback EquipTypesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurposesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CitiesInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CitiesStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CitiesCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirportsInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirportsCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirportsStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirportsCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Countries2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Cities2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CitiesInternational2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CitiesState2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CitiesCountry2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Airports2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AirportsInternational2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AirportsCity2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AirportsState2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PesquisaLegacy() {
            this.Url = global::Carronet.Properties.Settings.Default.Carronet_rdcar_PesquisaLegacy;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AirportsCountry2CompletedEventHandler AirportsCountry2Completed;
        
        /// <remarks/>
        public event SearchCodeByCityNameCompletedEventHandler SearchCodeByCityNameCompleted;
        
        /// <remarks/>
        public event SearchCityCompletedEventHandler SearchCityCompleted;
        
        /// <remarks/>
        public event SearchCityJQueryCompletedEventHandler SearchCityJQueryCompleted;
        
        /// <remarks/>
        public event SearchCityNameCompletedEventHandler SearchCityNameCompleted;
        
        /// <remarks/>
        public event SearchCityNameJQueryCompletedEventHandler SearchCityNameJQueryCompleted;
        
        /// <remarks/>
        public event RentalsCompletedEventHandler RentalsCompleted;
        
        /// <remarks/>
        public event RentalsCityCompletedEventHandler RentalsCityCompleted;
        
        /// <remarks/>
        public event RentalsCountryCompletedEventHandler RentalsCountryCompleted;
        
        /// <remarks/>
        public event RentalsInternationalCompletedEventHandler RentalsInternationalCompleted;
        
        /// <remarks/>
        public event Rentals2CompletedEventHandler Rentals2Completed;
        
        /// <remarks/>
        public event RentalsCity2CompletedEventHandler RentalsCity2Completed;
        
        /// <remarks/>
        public event RentalsCountry2CompletedEventHandler RentalsCountry2Completed;
        
        /// <remarks/>
        public event RentalsInternational2CompletedEventHandler RentalsInternational2Completed;
        
        /// <remarks/>
        public event RentalLocationsCompletedEventHandler RentalLocationsCompleted;
        
        /// <remarks/>
        public event RentalLocationsCountryCompletedEventHandler RentalLocationsCountryCompleted;
        
        /// <remarks/>
        public event RentalLocationsInternationalCompletedEventHandler RentalLocationsInternationalCompleted;
        
        /// <remarks/>
        public event RentalLocationsCityCompletedEventHandler RentalLocationsCityCompleted;
        
        /// <remarks/>
        public event RentalInfoCompletedEventHandler RentalInfoCompleted;
        
        /// <remarks/>
        public event RentalInfoInternationalCompletedEventHandler RentalInfoInternationalCompleted;
        
        /// <remarks/>
        public event RentalSchedulesCompletedEventHandler RentalSchedulesCompleted;
        
        /// <remarks/>
        public event RentalSchedulesCountryCompletedEventHandler RentalSchedulesCountryCompleted;
        
        /// <remarks/>
        public event RentalSchedulesInternationalCompletedEventHandler RentalSchedulesInternationalCompleted;
        
        /// <remarks/>
        public event RentalSchedulesCityCompletedEventHandler RentalSchedulesCityCompleted;
        
        /// <remarks/>
        public event LocationCompletedEventHandler LocationCompleted;
        
        /// <remarks/>
        public event LocationInfoCompletedEventHandler LocationInfoCompleted;
        
        /// <remarks/>
        public event LocationInfoInternationalCompletedEventHandler LocationInfoInternationalCompleted;
        
        /// <remarks/>
        public event LocationHolidaysCompletedEventHandler LocationHolidaysCompleted;
        
        /// <remarks/>
        public event LocationWeekCompletedEventHandler LocationWeekCompleted;
        
        /// <remarks/>
        public event CityWeekScheduleCompletedEventHandler CityWeekScheduleCompleted;
        
        /// <remarks/>
        public event RentalParameterCompletedEventHandler RentalParameterCompleted;
        
        /// <remarks/>
        public event DsCurrenciesCompletedEventHandler DsCurrenciesCompleted;
        
        /// <remarks/>
        public event DsCountriesCompletedEventHandler DsCountriesCompleted;
        
        /// <remarks/>
        public event DsStatesCountryCompletedEventHandler DsStatesCountryCompleted;
        
        /// <remarks/>
        public event DsStatesCompletedEventHandler DsStatesCompleted;
        
        /// <remarks/>
        public event DsCitiesCompletedEventHandler DsCitiesCompleted;
        
        /// <remarks/>
        public event DsAirlinesCompletedEventHandler DsAirlinesCompleted;
        
        /// <remarks/>
        public event DsAirportsCompletedEventHandler DsAirportsCompleted;
        
        /// <remarks/>
        public event DsAirportsCityCompletedEventHandler DsAirportsCityCompleted;
        
        /// <remarks/>
        public event DsAirportsStateCompletedEventHandler DsAirportsStateCompleted;
        
        /// <remarks/>
        public event DsAirportsCountryCompletedEventHandler DsAirportsCountryCompleted;
        
        /// <remarks/>
        public event ChecksumAirportsCompletedEventHandler ChecksumAirportsCompleted;
        
        /// <remarks/>
        public event ChecksumCitiesCompletedEventHandler ChecksumCitiesCompleted;
        
        /// <remarks/>
        public event ChecksumCountriesCompletedEventHandler ChecksumCountriesCompleted;
        
        /// <remarks/>
        public event ChecksumStatesCompletedEventHandler ChecksumStatesCompleted;
        
        /// <remarks/>
        public event ChecksumRentalsCompletedEventHandler ChecksumRentalsCompleted;
        
        /// <remarks/>
        public event ChecksumRentalLocationsCompletedEventHandler ChecksumRentalLocationsCompleted;
        
        /// <remarks/>
        public event VersionCompletedEventHandler VersionCompleted;
        
        /// <remarks/>
        public event SimpleSearchCompletedEventHandler SimpleSearchCompleted;
        
        /// <remarks/>
        public event SimpleSearchGroupRentalCompletedEventHandler SimpleSearchGroupRentalCompleted;
        
        /// <remarks/>
        public event SimpleSearchWaitListCompletedEventHandler SimpleSearchWaitListCompleted;
        
        /// <remarks/>
        public event SimpleSearchAirportCompletedEventHandler SimpleSearchAirportCompleted;
        
        /// <remarks/>
        public event SimpleSearchEquipTypesCompletedEventHandler SimpleSearchEquipTypesCompleted;
        
        /// <remarks/>
        public event SimpleSearchInternationalCompletedEventHandler SimpleSearchInternationalCompleted;
        
        /// <remarks/>
        public event SimpleSearchAutoCurrencyCompletedEventHandler SimpleSearchAutoCurrencyCompleted;
        
        /// <remarks/>
        public event SimpleSearchInternational2CompletedEventHandler SimpleSearchInternational2Completed;
        
        /// <remarks/>
        public event SimpleSearchAutoCurrency2CompletedEventHandler SimpleSearchAutoCurrency2Completed;
        
        /// <remarks/>
        public event SimpleSearchInternational3CompletedEventHandler SimpleSearchInternational3Completed;
        
        /// <remarks/>
        public event SimpleSearchAutoCurrency3CompletedEventHandler SimpleSearchAutoCurrency3Completed;
        
        /// <remarks/>
        public event SimpleSearchInternational4CompletedEventHandler SimpleSearchInternational4Completed;
        
        /// <remarks/>
        public event SimpleSearchAutoCurrency4CompletedEventHandler SimpleSearchAutoCurrency4Completed;
        
        /// <remarks/>
        public event RentalSearchCompletedEventHandler RentalSearchCompleted;
        
        /// <remarks/>
        public event RentalSearchGroupCompletedEventHandler RentalSearchGroupCompleted;
        
        /// <remarks/>
        public event RentalSearchWaitListCompletedEventHandler RentalSearchWaitListCompleted;
        
        /// <remarks/>
        public event RentalSearchEquipTypesCompletedEventHandler RentalSearchEquipTypesCompleted;
        
        /// <remarks/>
        public event RentalSearchInternationalCompletedEventHandler RentalSearchInternationalCompleted;
        
        /// <remarks/>
        public event RentalSearchAutoCurrencyCompletedEventHandler RentalSearchAutoCurrencyCompleted;
        
        /// <remarks/>
        public event RentalSearchInternational2CompletedEventHandler RentalSearchInternational2Completed;
        
        /// <remarks/>
        public event RentalSearchAutoCurrency2CompletedEventHandler RentalSearchAutoCurrency2Completed;
        
        /// <remarks/>
        public event RentalSearchInternational3CompletedEventHandler RentalSearchInternational3Completed;
        
        /// <remarks/>
        public event RentalSearchAutoCurrency3CompletedEventHandler RentalSearchAutoCurrency3Completed;
        
        /// <remarks/>
        public event RentalSearchInternational4CompletedEventHandler RentalSearchInternational4Completed;
        
        /// <remarks/>
        public event RentalSearchAutoCurrency4CompletedEventHandler RentalSearchAutoCurrency4Completed;
        
        /// <remarks/>
        public event PassiveReserveCompletedEventHandler PassiveReserveCompleted;
        
        /// <remarks/>
        public event ReserveCompletedEventHandler ReserveCompleted;
        
        /// <remarks/>
        public event ReserveWaitlistCompletedEventHandler ReserveWaitlistCompleted;
        
        /// <remarks/>
        public event ReserveInternationalCompletedEventHandler ReserveInternationalCompleted;
        
        /// <remarks/>
        public event ReserveAutoCurrencyCompletedEventHandler ReserveAutoCurrencyCompleted;
        
        /// <remarks/>
        public event Reserve2CompletedEventHandler Reserve2Completed;
        
        /// <remarks/>
        public event ReserveWaitlist2CompletedEventHandler ReserveWaitlist2Completed;
        
        /// <remarks/>
        public event ReserveInternational2CompletedEventHandler ReserveInternational2Completed;
        
        /// <remarks/>
        public event ReserveAutoCurrency2CompletedEventHandler ReserveAutoCurrency2Completed;
        
        /// <remarks/>
        public event ReserveInternational3CompletedEventHandler ReserveInternational3Completed;
        
        /// <remarks/>
        public event ReserveAutoCurrency3CompletedEventHandler ReserveAutoCurrency3Completed;
        
        /// <remarks/>
        public event PassiveCancelReserveCompletedEventHandler PassiveCancelReserveCompleted;
        
        /// <remarks/>
        public event CancelReserveCompletedEventHandler CancelReserveCompleted;
        
        /// <remarks/>
        public event CancelReserveInternationalCompletedEventHandler CancelReserveInternationalCompleted;
        
        /// <remarks/>
        public event CancelReserveAutoCurrencyCompletedEventHandler CancelReserveAutoCurrencyCompleted;
        
        /// <remarks/>
        public event CancelReserveInternational2CompletedEventHandler CancelReserveInternational2Completed;
        
        /// <remarks/>
        public event CancelReserveAutoCurrency2CompletedEventHandler CancelReserveAutoCurrency2Completed;
        
        /// <remarks/>
        public event PassiveModifyReserveCompletedEventHandler PassiveModifyReserveCompleted;
        
        /// <remarks/>
        public event ModifyReserveCompletedEventHandler ModifyReserveCompleted;
        
        /// <remarks/>
        public event ModifyReserveInternationalCompletedEventHandler ModifyReserveInternationalCompleted;
        
        /// <remarks/>
        public event ModifyReserveAutoCurrencyCompletedEventHandler ModifyReserveAutoCurrencyCompleted;
        
        /// <remarks/>
        public event ModifyReserveInternational2CompletedEventHandler ModifyReserveInternational2Completed;
        
        /// <remarks/>
        public event ModifyReserveAutoCurrency2CompletedEventHandler ModifyReserveAutoCurrency2Completed;
        
        /// <remarks/>
        public event PassiveViewReserveCompletedEventHandler PassiveViewReserveCompleted;
        
        /// <remarks/>
        public event ViewReserveCompletedEventHandler ViewReserveCompleted;
        
        /// <remarks/>
        public event ViewReserveInternationalCompletedEventHandler ViewReserveInternationalCompleted;
        
        /// <remarks/>
        public event ViewReserveAutoCurrencyCompletedEventHandler ViewReserveAutoCurrencyCompleted;
        
        /// <remarks/>
        public event ViewReserveInternational2CompletedEventHandler ViewReserveInternational2Completed;
        
        /// <remarks/>
        public event ViewReserveAutoCurrency2CompletedEventHandler ViewReserveAutoCurrency2Completed;
        
        /// <remarks/>
        public event GroupsCompletedEventHandler GroupsCompleted;
        
        /// <remarks/>
        public event RentalGroupsCompletedEventHandler RentalGroupsCompleted;
        
        /// <remarks/>
        public event CoverageTypesCompletedEventHandler CoverageTypesCompleted;
        
        /// <remarks/>
        public event EquipTypesCompletedEventHandler EquipTypesCompleted;
        
        /// <remarks/>
        public event PurposesCompletedEventHandler PurposesCompleted;
        
        /// <remarks/>
        public event InformationTypesCompletedEventHandler InformationTypesCompleted;
        
        /// <remarks/>
        public event RentalsListCompletedEventHandler RentalsListCompleted;
        
        /// <remarks/>
        public event RentalsList2CompletedEventHandler RentalsList2Completed;
        
        /// <remarks/>
        public event GroupsListCompletedEventHandler GroupsListCompleted;
        
        /// <remarks/>
        public event CoverageTypesListCompletedEventHandler CoverageTypesListCompleted;
        
        /// <remarks/>
        public event EquipTypesListCompletedEventHandler EquipTypesListCompleted;
        
        /// <remarks/>
        public event PurposesListCompletedEventHandler PurposesListCompleted;
        
        /// <remarks/>
        public event CountriesCompletedEventHandler CountriesCompleted;
        
        /// <remarks/>
        public event CitiesCompletedEventHandler CitiesCompleted;
        
        /// <remarks/>
        public event CitiesInternationalCompletedEventHandler CitiesInternationalCompleted;
        
        /// <remarks/>
        public event CitiesStateCompletedEventHandler CitiesStateCompleted;
        
        /// <remarks/>
        public event CitiesCountryCompletedEventHandler CitiesCountryCompleted;
        
        /// <remarks/>
        public event AirportsCompletedEventHandler AirportsCompleted;
        
        /// <remarks/>
        public event AirportsInternationalCompletedEventHandler AirportsInternationalCompleted;
        
        /// <remarks/>
        public event AirportsCityCompletedEventHandler AirportsCityCompleted;
        
        /// <remarks/>
        public event AirportsStateCompletedEventHandler AirportsStateCompleted;
        
        /// <remarks/>
        public event AirportsCountryCompletedEventHandler AirportsCountryCompleted;
        
        /// <remarks/>
        public event Countries2CompletedEventHandler Countries2Completed;
        
        /// <remarks/>
        public event Cities2CompletedEventHandler Cities2Completed;
        
        /// <remarks/>
        public event CitiesInternational2CompletedEventHandler CitiesInternational2Completed;
        
        /// <remarks/>
        public event CitiesState2CompletedEventHandler CitiesState2Completed;
        
        /// <remarks/>
        public event CitiesCountry2CompletedEventHandler CitiesCountry2Completed;
        
        /// <remarks/>
        public event Airports2CompletedEventHandler Airports2Completed;
        
        /// <remarks/>
        public event AirportsInternational2CompletedEventHandler AirportsInternational2Completed;
        
        /// <remarks/>
        public event AirportsCity2CompletedEventHandler AirportsCity2Completed;
        
        /// <remarks/>
        public event AirportsState2CompletedEventHandler AirportsState2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AirportsCountry2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] AirportsCountry2(int code, string rentalsCodes, int country) {
            object[] results = this.Invoke("AirportsCountry2", new object[] {
                        code,
                        rentalsCodes,
                        country});
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void AirportsCountry2Async(int code, string rentalsCodes, int country) {
            this.AirportsCountry2Async(code, rentalsCodes, country, null);
        }
        
        /// <remarks/>
        public void AirportsCountry2Async(int code, string rentalsCodes, int country, object userState) {
            if ((this.AirportsCountry2OperationCompleted == null)) {
                this.AirportsCountry2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirportsCountry2OperationCompleted);
            }
            this.InvokeAsync("AirportsCountry2", new object[] {
                        code,
                        rentalsCodes,
                        country}, this.AirportsCountry2OperationCompleted, userState);
        }
        
        private void OnAirportsCountry2OperationCompleted(object arg) {
            if ((this.AirportsCountry2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirportsCountry2Completed(this, new AirportsCountry2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchCodeByCityName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchCodeByCityName(string prefixText) {
            object[] results = this.Invoke("SearchCodeByCityName", new object[] {
                        prefixText});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchCodeByCityNameAsync(string prefixText) {
            this.SearchCodeByCityNameAsync(prefixText, null);
        }
        
        /// <remarks/>
        public void SearchCodeByCityNameAsync(string prefixText, object userState) {
            if ((this.SearchCodeByCityNameOperationCompleted == null)) {
                this.SearchCodeByCityNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCodeByCityNameOperationCompleted);
            }
            this.InvokeAsync("SearchCodeByCityName", new object[] {
                        prefixText}, this.SearchCodeByCityNameOperationCompleted, userState);
        }
        
        private void OnSearchCodeByCityNameOperationCompleted(object arg) {
            if ((this.SearchCodeByCityNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCodeByCityNameCompleted(this, new SearchCodeByCityNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public City[] SearchCity(string prefixText, int count) {
            object[] results = this.Invoke("SearchCity", new object[] {
                        prefixText,
                        count});
            return ((City[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCityAsync(string prefixText, int count) {
            this.SearchCityAsync(prefixText, count, null);
        }
        
        /// <remarks/>
        public void SearchCityAsync(string prefixText, int count, object userState) {
            if ((this.SearchCityOperationCompleted == null)) {
                this.SearchCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCityOperationCompleted);
            }
            this.InvokeAsync("SearchCity", new object[] {
                        prefixText,
                        count}, this.SearchCityOperationCompleted, userState);
        }
        
        private void OnSearchCityOperationCompleted(object arg) {
            if ((this.SearchCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCityCompleted(this, new SearchCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchCityJQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public City[] SearchCityJQuery(string q, int limit) {
            object[] results = this.Invoke("SearchCityJQuery", new object[] {
                        q,
                        limit});
            return ((City[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCityJQueryAsync(string q, int limit) {
            this.SearchCityJQueryAsync(q, limit, null);
        }
        
        /// <remarks/>
        public void SearchCityJQueryAsync(string q, int limit, object userState) {
            if ((this.SearchCityJQueryOperationCompleted == null)) {
                this.SearchCityJQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCityJQueryOperationCompleted);
            }
            this.InvokeAsync("SearchCityJQuery", new object[] {
                        q,
                        limit}, this.SearchCityJQueryOperationCompleted, userState);
        }
        
        private void OnSearchCityJQueryOperationCompleted(object arg) {
            if ((this.SearchCityJQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCityJQueryCompleted(this, new SearchCityJQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchCityName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SearchCityName(string prefixText, int count) {
            object[] results = this.Invoke("SearchCityName", new object[] {
                        prefixText,
                        count});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCityNameAsync(string prefixText, int count) {
            this.SearchCityNameAsync(prefixText, count, null);
        }
        
        /// <remarks/>
        public void SearchCityNameAsync(string prefixText, int count, object userState) {
            if ((this.SearchCityNameOperationCompleted == null)) {
                this.SearchCityNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCityNameOperationCompleted);
            }
            this.InvokeAsync("SearchCityName", new object[] {
                        prefixText,
                        count}, this.SearchCityNameOperationCompleted, userState);
        }
        
        private void OnSearchCityNameOperationCompleted(object arg) {
            if ((this.SearchCityNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCityNameCompleted(this, new SearchCityNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchCityNameJQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SearchCityNameJQuery(string q, int limit) {
            object[] results = this.Invoke("SearchCityNameJQuery", new object[] {
                        q,
                        limit});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCityNameJQueryAsync(string q, int limit) {
            this.SearchCityNameJQueryAsync(q, limit, null);
        }
        
        /// <remarks/>
        public void SearchCityNameJQueryAsync(string q, int limit, object userState) {
            if ((this.SearchCityNameJQueryOperationCompleted == null)) {
                this.SearchCityNameJQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCityNameJQueryOperationCompleted);
            }
            this.InvokeAsync("SearchCityNameJQuery", new object[] {
                        q,
                        limit}, this.SearchCityNameJQueryOperationCompleted, userState);
        }
        
        private void OnSearchCityNameJQueryOperationCompleted(object arg) {
            if ((this.SearchCityNameJQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCityNameJQueryCompleted(this, new SearchCityNameJQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Rentals", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rental[] Rentals() {
            object[] results = this.Invoke("Rentals", new object[0]);
            return ((Rental[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalsAsync() {
            this.RentalsAsync(null);
        }
        
        /// <remarks/>
        public void RentalsAsync(object userState) {
            if ((this.RentalsOperationCompleted == null)) {
                this.RentalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalsOperationCompleted);
            }
            this.InvokeAsync("Rentals", new object[0], this.RentalsOperationCompleted, userState);
        }
        
        private void OnRentalsOperationCompleted(object arg) {
            if ((this.RentalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalsCompleted(this, new RentalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalsCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rental[] RentalsCity(string iata, bool nearby, bool atAirport) {
            object[] results = this.Invoke("RentalsCity", new object[] {
                        iata,
                        nearby,
                        atAirport});
            return ((Rental[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalsCityAsync(string iata, bool nearby, bool atAirport) {
            this.RentalsCityAsync(iata, nearby, atAirport, null);
        }
        
        /// <remarks/>
        public void RentalsCityAsync(string iata, bool nearby, bool atAirport, object userState) {
            if ((this.RentalsCityOperationCompleted == null)) {
                this.RentalsCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalsCityOperationCompleted);
            }
            this.InvokeAsync("RentalsCity", new object[] {
                        iata,
                        nearby,
                        atAirport}, this.RentalsCityOperationCompleted, userState);
        }
        
        private void OnRentalsCityOperationCompleted(object arg) {
            if ((this.RentalsCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalsCityCompleted(this, new RentalsCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalsCountry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rental[] RentalsCountry(int country) {
            object[] results = this.Invoke("RentalsCountry", new object[] {
                        country});
            return ((Rental[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalsCountryAsync(int country) {
            this.RentalsCountryAsync(country, null);
        }
        
        /// <remarks/>
        public void RentalsCountryAsync(int country, object userState) {
            if ((this.RentalsCountryOperationCompleted == null)) {
                this.RentalsCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalsCountryOperationCompleted);
            }
            this.InvokeAsync("RentalsCountry", new object[] {
                        country}, this.RentalsCountryOperationCompleted, userState);
        }
        
        private void OnRentalsCountryOperationCompleted(object arg) {
            if ((this.RentalsCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalsCountryCompleted(this, new RentalsCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalsInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rental[] RentalsInternational() {
            object[] results = this.Invoke("RentalsInternational", new object[0]);
            return ((Rental[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalsInternationalAsync() {
            this.RentalsInternationalAsync(null);
        }
        
        /// <remarks/>
        public void RentalsInternationalAsync(object userState) {
            if ((this.RentalsInternationalOperationCompleted == null)) {
                this.RentalsInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalsInternationalOperationCompleted);
            }
            this.InvokeAsync("RentalsInternational", new object[0], this.RentalsInternationalOperationCompleted, userState);
        }
        
        private void OnRentalsInternationalOperationCompleted(object arg) {
            if ((this.RentalsInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalsInternationalCompleted(this, new RentalsInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Rentals2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rental[] Rentals2(int code) {
            object[] results = this.Invoke("Rentals2", new object[] {
                        code});
            return ((Rental[])(results[0]));
        }
        
        /// <remarks/>
        public void Rentals2Async(int code) {
            this.Rentals2Async(code, null);
        }
        
        /// <remarks/>
        public void Rentals2Async(int code, object userState) {
            if ((this.Rentals2OperationCompleted == null)) {
                this.Rentals2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentals2OperationCompleted);
            }
            this.InvokeAsync("Rentals2", new object[] {
                        code}, this.Rentals2OperationCompleted, userState);
        }
        
        private void OnRentals2OperationCompleted(object arg) {
            if ((this.Rentals2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Rentals2Completed(this, new Rentals2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalsCity2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rental[] RentalsCity2(int code, string iata, bool nearby, bool atAirport) {
            object[] results = this.Invoke("RentalsCity2", new object[] {
                        code,
                        iata,
                        nearby,
                        atAirport});
            return ((Rental[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalsCity2Async(int code, string iata, bool nearby, bool atAirport) {
            this.RentalsCity2Async(code, iata, nearby, atAirport, null);
        }
        
        /// <remarks/>
        public void RentalsCity2Async(int code, string iata, bool nearby, bool atAirport, object userState) {
            if ((this.RentalsCity2OperationCompleted == null)) {
                this.RentalsCity2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalsCity2OperationCompleted);
            }
            this.InvokeAsync("RentalsCity2", new object[] {
                        code,
                        iata,
                        nearby,
                        atAirport}, this.RentalsCity2OperationCompleted, userState);
        }
        
        private void OnRentalsCity2OperationCompleted(object arg) {
            if ((this.RentalsCity2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalsCity2Completed(this, new RentalsCity2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalsCountry2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rental[] RentalsCountry2(int code, int country) {
            object[] results = this.Invoke("RentalsCountry2", new object[] {
                        code,
                        country});
            return ((Rental[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalsCountry2Async(int code, int country) {
            this.RentalsCountry2Async(code, country, null);
        }
        
        /// <remarks/>
        public void RentalsCountry2Async(int code, int country, object userState) {
            if ((this.RentalsCountry2OperationCompleted == null)) {
                this.RentalsCountry2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalsCountry2OperationCompleted);
            }
            this.InvokeAsync("RentalsCountry2", new object[] {
                        code,
                        country}, this.RentalsCountry2OperationCompleted, userState);
        }
        
        private void OnRentalsCountry2OperationCompleted(object arg) {
            if ((this.RentalsCountry2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalsCountry2Completed(this, new RentalsCountry2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalsInternational2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rental[] RentalsInternational2(int code) {
            object[] results = this.Invoke("RentalsInternational2", new object[] {
                        code});
            return ((Rental[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalsInternational2Async(int code) {
            this.RentalsInternational2Async(code, null);
        }
        
        /// <remarks/>
        public void RentalsInternational2Async(int code, object userState) {
            if ((this.RentalsInternational2OperationCompleted == null)) {
                this.RentalsInternational2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalsInternational2OperationCompleted);
            }
            this.InvokeAsync("RentalsInternational2", new object[] {
                        code}, this.RentalsInternational2OperationCompleted, userState);
        }
        
        private void OnRentalsInternational2OperationCompleted(object arg) {
            if ((this.RentalsInternational2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalsInternational2Completed(this, new RentalsInternational2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalLocations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationDetails[] RentalLocations(int rentalCode) {
            object[] results = this.Invoke("RentalLocations", new object[] {
                        rentalCode});
            return ((LocationDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalLocationsAsync(int rentalCode) {
            this.RentalLocationsAsync(rentalCode, null);
        }
        
        /// <remarks/>
        public void RentalLocationsAsync(int rentalCode, object userState) {
            if ((this.RentalLocationsOperationCompleted == null)) {
                this.RentalLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalLocationsOperationCompleted);
            }
            this.InvokeAsync("RentalLocations", new object[] {
                        rentalCode}, this.RentalLocationsOperationCompleted, userState);
        }
        
        private void OnRentalLocationsOperationCompleted(object arg) {
            if ((this.RentalLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalLocationsCompleted(this, new RentalLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalLocationsCountry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationDetails[] RentalLocationsCountry(int rentalCode, int country) {
            object[] results = this.Invoke("RentalLocationsCountry", new object[] {
                        rentalCode,
                        country});
            return ((LocationDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalLocationsCountryAsync(int rentalCode, int country) {
            this.RentalLocationsCountryAsync(rentalCode, country, null);
        }
        
        /// <remarks/>
        public void RentalLocationsCountryAsync(int rentalCode, int country, object userState) {
            if ((this.RentalLocationsCountryOperationCompleted == null)) {
                this.RentalLocationsCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalLocationsCountryOperationCompleted);
            }
            this.InvokeAsync("RentalLocationsCountry", new object[] {
                        rentalCode,
                        country}, this.RentalLocationsCountryOperationCompleted, userState);
        }
        
        private void OnRentalLocationsCountryOperationCompleted(object arg) {
            if ((this.RentalLocationsCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalLocationsCountryCompleted(this, new RentalLocationsCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalLocationsInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationDetails[] RentalLocationsInternational(int rentalCode) {
            object[] results = this.Invoke("RentalLocationsInternational", new object[] {
                        rentalCode});
            return ((LocationDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalLocationsInternationalAsync(int rentalCode) {
            this.RentalLocationsInternationalAsync(rentalCode, null);
        }
        
        /// <remarks/>
        public void RentalLocationsInternationalAsync(int rentalCode, object userState) {
            if ((this.RentalLocationsInternationalOperationCompleted == null)) {
                this.RentalLocationsInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalLocationsInternationalOperationCompleted);
            }
            this.InvokeAsync("RentalLocationsInternational", new object[] {
                        rentalCode}, this.RentalLocationsInternationalOperationCompleted, userState);
        }
        
        private void OnRentalLocationsInternationalOperationCompleted(object arg) {
            if ((this.RentalLocationsInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalLocationsInternationalCompleted(this, new RentalLocationsInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalLocationsCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationDetails[] RentalLocationsCity(int rentalCode, string iata, bool nearby, bool atAirport) {
            object[] results = this.Invoke("RentalLocationsCity", new object[] {
                        rentalCode,
                        iata,
                        nearby,
                        atAirport});
            return ((LocationDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalLocationsCityAsync(int rentalCode, string iata, bool nearby, bool atAirport) {
            this.RentalLocationsCityAsync(rentalCode, iata, nearby, atAirport, null);
        }
        
        /// <remarks/>
        public void RentalLocationsCityAsync(int rentalCode, string iata, bool nearby, bool atAirport, object userState) {
            if ((this.RentalLocationsCityOperationCompleted == null)) {
                this.RentalLocationsCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalLocationsCityOperationCompleted);
            }
            this.InvokeAsync("RentalLocationsCity", new object[] {
                        rentalCode,
                        iata,
                        nearby,
                        atAirport}, this.RentalLocationsCityOperationCompleted, userState);
        }
        
        private void OnRentalLocationsCityOperationCompleted(object arg) {
            if ((this.RentalLocationsCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalLocationsCityCompleted(this, new RentalLocationsCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RentalInfo(int rentalCode, int infoType) {
            object[] results = this.Invoke("RentalInfo", new object[] {
                        rentalCode,
                        infoType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RentalInfoAsync(int rentalCode, int infoType) {
            this.RentalInfoAsync(rentalCode, infoType, null);
        }
        
        /// <remarks/>
        public void RentalInfoAsync(int rentalCode, int infoType, object userState) {
            if ((this.RentalInfoOperationCompleted == null)) {
                this.RentalInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalInfoOperationCompleted);
            }
            this.InvokeAsync("RentalInfo", new object[] {
                        rentalCode,
                        infoType}, this.RentalInfoOperationCompleted, userState);
        }
        
        private void OnRentalInfoOperationCompleted(object arg) {
            if ((this.RentalInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalInfoCompleted(this, new RentalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalInfoInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RentalInfoInternational(int rentalCode, int infoType, int country) {
            object[] results = this.Invoke("RentalInfoInternational", new object[] {
                        rentalCode,
                        infoType,
                        country});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RentalInfoInternationalAsync(int rentalCode, int infoType, int country) {
            this.RentalInfoInternationalAsync(rentalCode, infoType, country, null);
        }
        
        /// <remarks/>
        public void RentalInfoInternationalAsync(int rentalCode, int infoType, int country, object userState) {
            if ((this.RentalInfoInternationalOperationCompleted == null)) {
                this.RentalInfoInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalInfoInternationalOperationCompleted);
            }
            this.InvokeAsync("RentalInfoInternational", new object[] {
                        rentalCode,
                        infoType,
                        country}, this.RentalInfoInternationalOperationCompleted, userState);
        }
        
        private void OnRentalInfoInternationalOperationCompleted(object arg) {
            if ((this.RentalInfoInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalInfoInternationalCompleted(this, new RentalInfoInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSchedules", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationSchedule[] RentalSchedules(int rentalCode) {
            object[] results = this.Invoke("RentalSchedules", new object[] {
                        rentalCode});
            return ((LocationSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalSchedulesAsync(int rentalCode) {
            this.RentalSchedulesAsync(rentalCode, null);
        }
        
        /// <remarks/>
        public void RentalSchedulesAsync(int rentalCode, object userState) {
            if ((this.RentalSchedulesOperationCompleted == null)) {
                this.RentalSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSchedulesOperationCompleted);
            }
            this.InvokeAsync("RentalSchedules", new object[] {
                        rentalCode}, this.RentalSchedulesOperationCompleted, userState);
        }
        
        private void OnRentalSchedulesOperationCompleted(object arg) {
            if ((this.RentalSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSchedulesCompleted(this, new RentalSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSchedulesCountry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationSchedule[] RentalSchedulesCountry(int rentalCode, int country) {
            object[] results = this.Invoke("RentalSchedulesCountry", new object[] {
                        rentalCode,
                        country});
            return ((LocationSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalSchedulesCountryAsync(int rentalCode, int country) {
            this.RentalSchedulesCountryAsync(rentalCode, country, null);
        }
        
        /// <remarks/>
        public void RentalSchedulesCountryAsync(int rentalCode, int country, object userState) {
            if ((this.RentalSchedulesCountryOperationCompleted == null)) {
                this.RentalSchedulesCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSchedulesCountryOperationCompleted);
            }
            this.InvokeAsync("RentalSchedulesCountry", new object[] {
                        rentalCode,
                        country}, this.RentalSchedulesCountryOperationCompleted, userState);
        }
        
        private void OnRentalSchedulesCountryOperationCompleted(object arg) {
            if ((this.RentalSchedulesCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSchedulesCountryCompleted(this, new RentalSchedulesCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSchedulesInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationSchedule[] RentalSchedulesInternational(int rentalCode) {
            object[] results = this.Invoke("RentalSchedulesInternational", new object[] {
                        rentalCode});
            return ((LocationSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalSchedulesInternationalAsync(int rentalCode) {
            this.RentalSchedulesInternationalAsync(rentalCode, null);
        }
        
        /// <remarks/>
        public void RentalSchedulesInternationalAsync(int rentalCode, object userState) {
            if ((this.RentalSchedulesInternationalOperationCompleted == null)) {
                this.RentalSchedulesInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSchedulesInternationalOperationCompleted);
            }
            this.InvokeAsync("RentalSchedulesInternational", new object[] {
                        rentalCode}, this.RentalSchedulesInternationalOperationCompleted, userState);
        }
        
        private void OnRentalSchedulesInternationalOperationCompleted(object arg) {
            if ((this.RentalSchedulesInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSchedulesInternationalCompleted(this, new RentalSchedulesInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSchedulesCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationSchedule[] RentalSchedulesCity(int rentalCode, string iata, bool nearby, bool atAirport) {
            object[] results = this.Invoke("RentalSchedulesCity", new object[] {
                        rentalCode,
                        iata,
                        nearby,
                        atAirport});
            return ((LocationSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalSchedulesCityAsync(int rentalCode, string iata, bool nearby, bool atAirport) {
            this.RentalSchedulesCityAsync(rentalCode, iata, nearby, atAirport, null);
        }
        
        /// <remarks/>
        public void RentalSchedulesCityAsync(int rentalCode, string iata, bool nearby, bool atAirport, object userState) {
            if ((this.RentalSchedulesCityOperationCompleted == null)) {
                this.RentalSchedulesCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSchedulesCityOperationCompleted);
            }
            this.InvokeAsync("RentalSchedulesCity", new object[] {
                        rentalCode,
                        iata,
                        nearby,
                        atAirport}, this.RentalSchedulesCityOperationCompleted, userState);
        }
        
        private void OnRentalSchedulesCityOperationCompleted(object arg) {
            if ((this.RentalSchedulesCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSchedulesCityCompleted(this, new RentalSchedulesCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Location", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationDetails Location(int rentalCode, string locationCode) {
            object[] results = this.Invoke("Location", new object[] {
                        rentalCode,
                        locationCode});
            return ((LocationDetails)(results[0]));
        }
        
        /// <remarks/>
        public void LocationAsync(int rentalCode, string locationCode) {
            this.LocationAsync(rentalCode, locationCode, null);
        }
        
        /// <remarks/>
        public void LocationAsync(int rentalCode, string locationCode, object userState) {
            if ((this.LocationOperationCompleted == null)) {
                this.LocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationOperationCompleted);
            }
            this.InvokeAsync("Location", new object[] {
                        rentalCode,
                        locationCode}, this.LocationOperationCompleted, userState);
        }
        
        private void OnLocationOperationCompleted(object arg) {
            if ((this.LocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationCompleted(this, new LocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LocationInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LocationInfo(int rentalCode, string locationCode, int infoType) {
            object[] results = this.Invoke("LocationInfo", new object[] {
                        rentalCode,
                        locationCode,
                        infoType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LocationInfoAsync(int rentalCode, string locationCode, int infoType) {
            this.LocationInfoAsync(rentalCode, locationCode, infoType, null);
        }
        
        /// <remarks/>
        public void LocationInfoAsync(int rentalCode, string locationCode, int infoType, object userState) {
            if ((this.LocationInfoOperationCompleted == null)) {
                this.LocationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationInfoOperationCompleted);
            }
            this.InvokeAsync("LocationInfo", new object[] {
                        rentalCode,
                        locationCode,
                        infoType}, this.LocationInfoOperationCompleted, userState);
        }
        
        private void OnLocationInfoOperationCompleted(object arg) {
            if ((this.LocationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationInfoCompleted(this, new LocationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LocationInfoInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LocationInfoInternational(int rentalCode, string locationCode, int infoType, int country) {
            object[] results = this.Invoke("LocationInfoInternational", new object[] {
                        rentalCode,
                        locationCode,
                        infoType,
                        country});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LocationInfoInternationalAsync(int rentalCode, string locationCode, int infoType, int country) {
            this.LocationInfoInternationalAsync(rentalCode, locationCode, infoType, country, null);
        }
        
        /// <remarks/>
        public void LocationInfoInternationalAsync(int rentalCode, string locationCode, int infoType, int country, object userState) {
            if ((this.LocationInfoInternationalOperationCompleted == null)) {
                this.LocationInfoInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationInfoInternationalOperationCompleted);
            }
            this.InvokeAsync("LocationInfoInternational", new object[] {
                        rentalCode,
                        locationCode,
                        infoType,
                        country}, this.LocationInfoInternationalOperationCompleted, userState);
        }
        
        private void OnLocationInfoInternationalOperationCompleted(object arg) {
            if ((this.LocationInfoInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationInfoInternationalCompleted(this, new LocationInfoInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LocationHolidays", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HolidaySchedule[] LocationHolidays(int rentalCode, string locationCode) {
            object[] results = this.Invoke("LocationHolidays", new object[] {
                        rentalCode,
                        locationCode});
            return ((HolidaySchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void LocationHolidaysAsync(int rentalCode, string locationCode) {
            this.LocationHolidaysAsync(rentalCode, locationCode, null);
        }
        
        /// <remarks/>
        public void LocationHolidaysAsync(int rentalCode, string locationCode, object userState) {
            if ((this.LocationHolidaysOperationCompleted == null)) {
                this.LocationHolidaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationHolidaysOperationCompleted);
            }
            this.InvokeAsync("LocationHolidays", new object[] {
                        rentalCode,
                        locationCode}, this.LocationHolidaysOperationCompleted, userState);
        }
        
        private void OnLocationHolidaysOperationCompleted(object arg) {
            if ((this.LocationHolidaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationHolidaysCompleted(this, new LocationHolidaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LocationWeek", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WeekSchedule[] LocationWeek(int rentalCode, string locationCode) {
            object[] results = this.Invoke("LocationWeek", new object[] {
                        rentalCode,
                        locationCode});
            return ((WeekSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void LocationWeekAsync(int rentalCode, string locationCode) {
            this.LocationWeekAsync(rentalCode, locationCode, null);
        }
        
        /// <remarks/>
        public void LocationWeekAsync(int rentalCode, string locationCode, object userState) {
            if ((this.LocationWeekOperationCompleted == null)) {
                this.LocationWeekOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationWeekOperationCompleted);
            }
            this.InvokeAsync("LocationWeek", new object[] {
                        rentalCode,
                        locationCode}, this.LocationWeekOperationCompleted, userState);
        }
        
        private void OnLocationWeekOperationCompleted(object arg) {
            if ((this.LocationWeekCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationWeekCompleted(this, new LocationWeekCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CityWeekSchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WeekSchedule CityWeekSchedule(int code, string iata, bool nearby, bool atAirport, string date) {
            object[] results = this.Invoke("CityWeekSchedule", new object[] {
                        code,
                        iata,
                        nearby,
                        atAirport,
                        date});
            return ((WeekSchedule)(results[0]));
        }
        
        /// <remarks/>
        public void CityWeekScheduleAsync(int code, string iata, bool nearby, bool atAirport, string date) {
            this.CityWeekScheduleAsync(code, iata, nearby, atAirport, date, null);
        }
        
        /// <remarks/>
        public void CityWeekScheduleAsync(int code, string iata, bool nearby, bool atAirport, string date, object userState) {
            if ((this.CityWeekScheduleOperationCompleted == null)) {
                this.CityWeekScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCityWeekScheduleOperationCompleted);
            }
            this.InvokeAsync("CityWeekSchedule", new object[] {
                        code,
                        iata,
                        nearby,
                        atAirport,
                        date}, this.CityWeekScheduleOperationCompleted, userState);
        }
        
        private void OnCityWeekScheduleOperationCompleted(object arg) {
            if ((this.CityWeekScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CityWeekScheduleCompleted(this, new CityWeekScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalParameter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RentalParameter(int rentalCode, string key) {
            object[] results = this.Invoke("RentalParameter", new object[] {
                        rentalCode,
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RentalParameterAsync(int rentalCode, string key) {
            this.RentalParameterAsync(rentalCode, key, null);
        }
        
        /// <remarks/>
        public void RentalParameterAsync(int rentalCode, string key, object userState) {
            if ((this.RentalParameterOperationCompleted == null)) {
                this.RentalParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalParameterOperationCompleted);
            }
            this.InvokeAsync("RentalParameter", new object[] {
                        rentalCode,
                        key}, this.RentalParameterOperationCompleted, userState);
        }
        
        private void OnRentalParameterOperationCompleted(object arg) {
            if ((this.RentalParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalParameterCompleted(this, new RentalParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DsCurrencies", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DsItem[] DsCurrencies() {
            object[] results = this.Invoke("DsCurrencies", new object[0]);
            return ((DsItem[])(results[0]));
        }
        
        /// <remarks/>
        public void DsCurrenciesAsync() {
            this.DsCurrenciesAsync(null);
        }
        
        /// <remarks/>
        public void DsCurrenciesAsync(object userState) {
            if ((this.DsCurrenciesOperationCompleted == null)) {
                this.DsCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDsCurrenciesOperationCompleted);
            }
            this.InvokeAsync("DsCurrencies", new object[0], this.DsCurrenciesOperationCompleted, userState);
        }
        
        private void OnDsCurrenciesOperationCompleted(object arg) {
            if ((this.DsCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DsCurrenciesCompleted(this, new DsCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DsCountries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DsItem[] DsCountries() {
            object[] results = this.Invoke("DsCountries", new object[0]);
            return ((DsItem[])(results[0]));
        }
        
        /// <remarks/>
        public void DsCountriesAsync() {
            this.DsCountriesAsync(null);
        }
        
        /// <remarks/>
        public void DsCountriesAsync(object userState) {
            if ((this.DsCountriesOperationCompleted == null)) {
                this.DsCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDsCountriesOperationCompleted);
            }
            this.InvokeAsync("DsCountries", new object[0], this.DsCountriesOperationCompleted, userState);
        }
        
        private void OnDsCountriesOperationCompleted(object arg) {
            if ((this.DsCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DsCountriesCompleted(this, new DsCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DsStatesCountry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DsItem[] DsStatesCountry(int country) {
            object[] results = this.Invoke("DsStatesCountry", new object[] {
                        country});
            return ((DsItem[])(results[0]));
        }
        
        /// <remarks/>
        public void DsStatesCountryAsync(int country) {
            this.DsStatesCountryAsync(country, null);
        }
        
        /// <remarks/>
        public void DsStatesCountryAsync(int country, object userState) {
            if ((this.DsStatesCountryOperationCompleted == null)) {
                this.DsStatesCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDsStatesCountryOperationCompleted);
            }
            this.InvokeAsync("DsStatesCountry", new object[] {
                        country}, this.DsStatesCountryOperationCompleted, userState);
        }
        
        private void OnDsStatesCountryOperationCompleted(object arg) {
            if ((this.DsStatesCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DsStatesCountryCompleted(this, new DsStatesCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DsStates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DsItem[] DsStates() {
            object[] results = this.Invoke("DsStates", new object[0]);
            return ((DsItem[])(results[0]));
        }
        
        /// <remarks/>
        public void DsStatesAsync() {
            this.DsStatesAsync(null);
        }
        
        /// <remarks/>
        public void DsStatesAsync(object userState) {
            if ((this.DsStatesOperationCompleted == null)) {
                this.DsStatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDsStatesOperationCompleted);
            }
            this.InvokeAsync("DsStates", new object[0], this.DsStatesOperationCompleted, userState);
        }
        
        private void OnDsStatesOperationCompleted(object arg) {
            if ((this.DsStatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DsStatesCompleted(this, new DsStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DsCities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DsItem[] DsCities(int state) {
            object[] results = this.Invoke("DsCities", new object[] {
                        state});
            return ((DsItem[])(results[0]));
        }
        
        /// <remarks/>
        public void DsCitiesAsync(int state) {
            this.DsCitiesAsync(state, null);
        }
        
        /// <remarks/>
        public void DsCitiesAsync(int state, object userState) {
            if ((this.DsCitiesOperationCompleted == null)) {
                this.DsCitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDsCitiesOperationCompleted);
            }
            this.InvokeAsync("DsCities", new object[] {
                        state}, this.DsCitiesOperationCompleted, userState);
        }
        
        private void OnDsCitiesOperationCompleted(object arg) {
            if ((this.DsCitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DsCitiesCompleted(this, new DsCitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DsAirlines", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airline[] DsAirlines() {
            object[] results = this.Invoke("DsAirlines", new object[0]);
            return ((Airline[])(results[0]));
        }
        
        /// <remarks/>
        public void DsAirlinesAsync() {
            this.DsAirlinesAsync(null);
        }
        
        /// <remarks/>
        public void DsAirlinesAsync(object userState) {
            if ((this.DsAirlinesOperationCompleted == null)) {
                this.DsAirlinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDsAirlinesOperationCompleted);
            }
            this.InvokeAsync("DsAirlines", new object[0], this.DsAirlinesOperationCompleted, userState);
        }
        
        private void OnDsAirlinesOperationCompleted(object arg) {
            if ((this.DsAirlinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DsAirlinesCompleted(this, new DsAirlinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DsAirports", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] DsAirports() {
            object[] results = this.Invoke("DsAirports", new object[0]);
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void DsAirportsAsync() {
            this.DsAirportsAsync(null);
        }
        
        /// <remarks/>
        public void DsAirportsAsync(object userState) {
            if ((this.DsAirportsOperationCompleted == null)) {
                this.DsAirportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDsAirportsOperationCompleted);
            }
            this.InvokeAsync("DsAirports", new object[0], this.DsAirportsOperationCompleted, userState);
        }
        
        private void OnDsAirportsOperationCompleted(object arg) {
            if ((this.DsAirportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DsAirportsCompleted(this, new DsAirportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DsAirportsCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] DsAirportsCity(int city) {
            object[] results = this.Invoke("DsAirportsCity", new object[] {
                        city});
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void DsAirportsCityAsync(int city) {
            this.DsAirportsCityAsync(city, null);
        }
        
        /// <remarks/>
        public void DsAirportsCityAsync(int city, object userState) {
            if ((this.DsAirportsCityOperationCompleted == null)) {
                this.DsAirportsCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDsAirportsCityOperationCompleted);
            }
            this.InvokeAsync("DsAirportsCity", new object[] {
                        city}, this.DsAirportsCityOperationCompleted, userState);
        }
        
        private void OnDsAirportsCityOperationCompleted(object arg) {
            if ((this.DsAirportsCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DsAirportsCityCompleted(this, new DsAirportsCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DsAirportsState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] DsAirportsState(int state) {
            object[] results = this.Invoke("DsAirportsState", new object[] {
                        state});
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void DsAirportsStateAsync(int state) {
            this.DsAirportsStateAsync(state, null);
        }
        
        /// <remarks/>
        public void DsAirportsStateAsync(int state, object userState) {
            if ((this.DsAirportsStateOperationCompleted == null)) {
                this.DsAirportsStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDsAirportsStateOperationCompleted);
            }
            this.InvokeAsync("DsAirportsState", new object[] {
                        state}, this.DsAirportsStateOperationCompleted, userState);
        }
        
        private void OnDsAirportsStateOperationCompleted(object arg) {
            if ((this.DsAirportsStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DsAirportsStateCompleted(this, new DsAirportsStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DsAirportsCountry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] DsAirportsCountry(int country) {
            object[] results = this.Invoke("DsAirportsCountry", new object[] {
                        country});
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void DsAirportsCountryAsync(int country) {
            this.DsAirportsCountryAsync(country, null);
        }
        
        /// <remarks/>
        public void DsAirportsCountryAsync(int country, object userState) {
            if ((this.DsAirportsCountryOperationCompleted == null)) {
                this.DsAirportsCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDsAirportsCountryOperationCompleted);
            }
            this.InvokeAsync("DsAirportsCountry", new object[] {
                        country}, this.DsAirportsCountryOperationCompleted, userState);
        }
        
        private void OnDsAirportsCountryOperationCompleted(object arg) {
            if ((this.DsAirportsCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DsAirportsCountryCompleted(this, new DsAirportsCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChecksumAirports", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChecksumAirports() {
            object[] results = this.Invoke("ChecksumAirports", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChecksumAirportsAsync() {
            this.ChecksumAirportsAsync(null);
        }
        
        /// <remarks/>
        public void ChecksumAirportsAsync(object userState) {
            if ((this.ChecksumAirportsOperationCompleted == null)) {
                this.ChecksumAirportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChecksumAirportsOperationCompleted);
            }
            this.InvokeAsync("ChecksumAirports", new object[0], this.ChecksumAirportsOperationCompleted, userState);
        }
        
        private void OnChecksumAirportsOperationCompleted(object arg) {
            if ((this.ChecksumAirportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChecksumAirportsCompleted(this, new ChecksumAirportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChecksumCities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChecksumCities() {
            object[] results = this.Invoke("ChecksumCities", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChecksumCitiesAsync() {
            this.ChecksumCitiesAsync(null);
        }
        
        /// <remarks/>
        public void ChecksumCitiesAsync(object userState) {
            if ((this.ChecksumCitiesOperationCompleted == null)) {
                this.ChecksumCitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChecksumCitiesOperationCompleted);
            }
            this.InvokeAsync("ChecksumCities", new object[0], this.ChecksumCitiesOperationCompleted, userState);
        }
        
        private void OnChecksumCitiesOperationCompleted(object arg) {
            if ((this.ChecksumCitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChecksumCitiesCompleted(this, new ChecksumCitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChecksumCountries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChecksumCountries() {
            object[] results = this.Invoke("ChecksumCountries", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChecksumCountriesAsync() {
            this.ChecksumCountriesAsync(null);
        }
        
        /// <remarks/>
        public void ChecksumCountriesAsync(object userState) {
            if ((this.ChecksumCountriesOperationCompleted == null)) {
                this.ChecksumCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChecksumCountriesOperationCompleted);
            }
            this.InvokeAsync("ChecksumCountries", new object[0], this.ChecksumCountriesOperationCompleted, userState);
        }
        
        private void OnChecksumCountriesOperationCompleted(object arg) {
            if ((this.ChecksumCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChecksumCountriesCompleted(this, new ChecksumCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChecksumStates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChecksumStates() {
            object[] results = this.Invoke("ChecksumStates", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChecksumStatesAsync() {
            this.ChecksumStatesAsync(null);
        }
        
        /// <remarks/>
        public void ChecksumStatesAsync(object userState) {
            if ((this.ChecksumStatesOperationCompleted == null)) {
                this.ChecksumStatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChecksumStatesOperationCompleted);
            }
            this.InvokeAsync("ChecksumStates", new object[0], this.ChecksumStatesOperationCompleted, userState);
        }
        
        private void OnChecksumStatesOperationCompleted(object arg) {
            if ((this.ChecksumStatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChecksumStatesCompleted(this, new ChecksumStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChecksumRentals", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChecksumRentals() {
            object[] results = this.Invoke("ChecksumRentals", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChecksumRentalsAsync() {
            this.ChecksumRentalsAsync(null);
        }
        
        /// <remarks/>
        public void ChecksumRentalsAsync(object userState) {
            if ((this.ChecksumRentalsOperationCompleted == null)) {
                this.ChecksumRentalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChecksumRentalsOperationCompleted);
            }
            this.InvokeAsync("ChecksumRentals", new object[0], this.ChecksumRentalsOperationCompleted, userState);
        }
        
        private void OnChecksumRentalsOperationCompleted(object arg) {
            if ((this.ChecksumRentalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChecksumRentalsCompleted(this, new ChecksumRentalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChecksumRentalLocations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChecksumRentalLocations(int rentalCode) {
            object[] results = this.Invoke("ChecksumRentalLocations", new object[] {
                        rentalCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChecksumRentalLocationsAsync(int rentalCode) {
            this.ChecksumRentalLocationsAsync(rentalCode, null);
        }
        
        /// <remarks/>
        public void ChecksumRentalLocationsAsync(int rentalCode, object userState) {
            if ((this.ChecksumRentalLocationsOperationCompleted == null)) {
                this.ChecksumRentalLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChecksumRentalLocationsOperationCompleted);
            }
            this.InvokeAsync("ChecksumRentalLocations", new object[] {
                        rentalCode}, this.ChecksumRentalLocationsOperationCompleted, userState);
        }
        
        private void OnChecksumRentalLocationsOperationCompleted(object arg) {
            if ((this.ChecksumRentalLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChecksumRentalLocationsCompleted(this, new ChecksumRentalLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Version", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Version() {
            object[] results = this.Invoke("Version", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VersionAsync() {
            this.VersionAsync(null);
        }
        
        /// <remarks/>
        public void VersionAsync(object userState) {
            if ((this.VersionOperationCompleted == null)) {
                this.VersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersionOperationCompleted);
            }
            this.InvokeAsync("Version", new object[0], this.VersionOperationCompleted, userState);
        }
        
        private void OnVersionOperationCompleted(object arg) {
            if ((this.VersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersionCompleted(this, new VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearch(string withdrawalCity, string deliveryCity, string startDate, string endDate, string startTime, string endTime, int code) {
            object[] results = this.Invoke("SimpleSearch", new object[] {
                        withdrawalCity,
                        deliveryCity,
                        startDate,
                        endDate,
                        startTime,
                        endTime,
                        code});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchAsync(string withdrawalCity, string deliveryCity, string startDate, string endDate, string startTime, string endTime, int code) {
            this.SimpleSearchAsync(withdrawalCity, deliveryCity, startDate, endDate, startTime, endTime, code, null);
        }
        
        /// <remarks/>
        public void SimpleSearchAsync(string withdrawalCity, string deliveryCity, string startDate, string endDate, string startTime, string endTime, int code, object userState) {
            if ((this.SimpleSearchOperationCompleted == null)) {
                this.SimpleSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchOperationCompleted);
            }
            this.InvokeAsync("SimpleSearch", new object[] {
                        withdrawalCity,
                        deliveryCity,
                        startDate,
                        endDate,
                        startTime,
                        endTime,
                        code}, this.SimpleSearchOperationCompleted, userState);
        }
        
        private void OnSimpleSearchOperationCompleted(object arg) {
            if ((this.SimpleSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchCompleted(this, new SimpleSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearchGroupRental", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearchGroupRental(string withdrawalCity, string deliveryCity, string startDate, string endDate, string startTime, string endTime, int code, string groupsCodes, string rentalsCodes) {
            object[] results = this.Invoke("SimpleSearchGroupRental", new object[] {
                        withdrawalCity,
                        deliveryCity,
                        startDate,
                        endDate,
                        startTime,
                        endTime,
                        code,
                        groupsCodes,
                        rentalsCodes});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchGroupRentalAsync(string withdrawalCity, string deliveryCity, string startDate, string endDate, string startTime, string endTime, int code, string groupsCodes, string rentalsCodes) {
            this.SimpleSearchGroupRentalAsync(withdrawalCity, deliveryCity, startDate, endDate, startTime, endTime, code, groupsCodes, rentalsCodes, null);
        }
        
        /// <remarks/>
        public void SimpleSearchGroupRentalAsync(string withdrawalCity, string deliveryCity, string startDate, string endDate, string startTime, string endTime, int code, string groupsCodes, string rentalsCodes, object userState) {
            if ((this.SimpleSearchGroupRentalOperationCompleted == null)) {
                this.SimpleSearchGroupRentalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchGroupRentalOperationCompleted);
            }
            this.InvokeAsync("SimpleSearchGroupRental", new object[] {
                        withdrawalCity,
                        deliveryCity,
                        startDate,
                        endDate,
                        startTime,
                        endTime,
                        code,
                        groupsCodes,
                        rentalsCodes}, this.SimpleSearchGroupRentalOperationCompleted, userState);
        }
        
        private void OnSimpleSearchGroupRentalOperationCompleted(object arg) {
            if ((this.SimpleSearchGroupRentalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchGroupRentalCompleted(this, new SimpleSearchGroupRentalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearchWaitList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearchWaitList(string withdrawalCity, string deliveryCity, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, bool displayWaitList) {
            object[] results = this.Invoke("SimpleSearchWaitList", new object[] {
                        withdrawalCity,
                        deliveryCity,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        displayWaitList});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchWaitListAsync(string withdrawalCity, string deliveryCity, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, bool displayWaitList) {
            this.SimpleSearchWaitListAsync(withdrawalCity, deliveryCity, startDate, endDate, code, groupsCodes, rentalsCodes, displayWaitList, null);
        }
        
        /// <remarks/>
        public void SimpleSearchWaitListAsync(string withdrawalCity, string deliveryCity, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, bool displayWaitList, object userState) {
            if ((this.SimpleSearchWaitListOperationCompleted == null)) {
                this.SimpleSearchWaitListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchWaitListOperationCompleted);
            }
            this.InvokeAsync("SimpleSearchWaitList", new object[] {
                        withdrawalCity,
                        deliveryCity,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        displayWaitList}, this.SimpleSearchWaitListOperationCompleted, userState);
        }
        
        private void OnSimpleSearchWaitListOperationCompleted(object arg) {
            if ((this.SimpleSearchWaitListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchWaitListCompleted(this, new SimpleSearchWaitListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearchAirport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearchAirport(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, bool displayWaitList, bool nearbyCities, bool atAirport) {
            object[] results = this.Invoke("SimpleSearchAirport", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        displayWaitList,
                        nearbyCities,
                        atAirport});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchAirportAsync(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, bool displayWaitList, bool nearbyCities, bool atAirport) {
            this.SimpleSearchAirportAsync(withdrawalIata, deliveryIata, startDate, endDate, code, groupsCodes, rentalsCodes, displayWaitList, nearbyCities, atAirport, null);
        }
        
        /// <remarks/>
        public void SimpleSearchAirportAsync(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, bool displayWaitList, bool nearbyCities, bool atAirport, object userState) {
            if ((this.SimpleSearchAirportOperationCompleted == null)) {
                this.SimpleSearchAirportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchAirportOperationCompleted);
            }
            this.InvokeAsync("SimpleSearchAirport", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        displayWaitList,
                        nearbyCities,
                        atAirport}, this.SimpleSearchAirportOperationCompleted, userState);
        }
        
        private void OnSimpleSearchAirportOperationCompleted(object arg) {
            if ((this.SimpleSearchAirportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchAirportCompleted(this, new SimpleSearchAirportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearchEquipTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearchEquipTypes(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport) {
            object[] results = this.Invoke("SimpleSearchEquipTypes", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        displayWaitList,
                        nearbyCities,
                        atAirport});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchEquipTypesAsync(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport) {
            this.SimpleSearchEquipTypesAsync(withdrawalIata, deliveryIata, startDate, endDate, code, groupsCodes, rentalsCodes, equipTypesCodes, displayWaitList, nearbyCities, atAirport, null);
        }
        
        /// <remarks/>
        public void SimpleSearchEquipTypesAsync(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport, object userState) {
            if ((this.SimpleSearchEquipTypesOperationCompleted == null)) {
                this.SimpleSearchEquipTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchEquipTypesOperationCompleted);
            }
            this.InvokeAsync("SimpleSearchEquipTypes", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        displayWaitList,
                        nearbyCities,
                        atAirport}, this.SimpleSearchEquipTypesOperationCompleted, userState);
        }
        
        private void OnSimpleSearchEquipTypesOperationCompleted(object arg) {
            if ((this.SimpleSearchEquipTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchEquipTypesCompleted(this, new SimpleSearchEquipTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearchInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearchInternational(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, int country, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport) {
            object[] results = this.Invoke("SimpleSearchInternational", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        displayWaitList,
                        nearbyCities,
                        atAirport});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchInternationalAsync(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, int country, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport) {
            this.SimpleSearchInternationalAsync(withdrawalIata, deliveryIata, startDate, endDate, code, country, groupsCodes, rentalsCodes, equipTypesCodes, displayWaitList, nearbyCities, atAirport, null);
        }
        
        /// <remarks/>
        public void SimpleSearchInternationalAsync(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, int country, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport, object userState) {
            if ((this.SimpleSearchInternationalOperationCompleted == null)) {
                this.SimpleSearchInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchInternationalOperationCompleted);
            }
            this.InvokeAsync("SimpleSearchInternational", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        displayWaitList,
                        nearbyCities,
                        atAirport}, this.SimpleSearchInternationalOperationCompleted, userState);
        }
        
        private void OnSimpleSearchInternationalOperationCompleted(object arg) {
            if ((this.SimpleSearchInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchInternationalCompleted(this, new SimpleSearchInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearchAutoCurrency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearchAutoCurrency(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport) {
            object[] results = this.Invoke("SimpleSearchAutoCurrency", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        displayWaitList,
                        nearbyCities,
                        atAirport});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchAutoCurrencyAsync(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport) {
            this.SimpleSearchAutoCurrencyAsync(withdrawalIata, deliveryIata, startDate, endDate, code, groupsCodes, rentalsCodes, equipTypesCodes, displayWaitList, nearbyCities, atAirport, null);
        }
        
        /// <remarks/>
        public void SimpleSearchAutoCurrencyAsync(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport, object userState) {
            if ((this.SimpleSearchAutoCurrencyOperationCompleted == null)) {
                this.SimpleSearchAutoCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchAutoCurrencyOperationCompleted);
            }
            this.InvokeAsync("SimpleSearchAutoCurrency", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        displayWaitList,
                        nearbyCities,
                        atAirport}, this.SimpleSearchAutoCurrencyOperationCompleted, userState);
        }
        
        private void OnSimpleSearchAutoCurrencyOperationCompleted(object arg) {
            if ((this.SimpleSearchAutoCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchAutoCurrencyCompleted(this, new SimpleSearchAutoCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearchInternational2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearchInternational2(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, int country, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo) {
            object[] results = this.Invoke("SimpleSearchInternational2", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        displayWaitList,
                        nearbyCities,
                        atAirport,
                        showInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchInternational2Async(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, int country, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo) {
            this.SimpleSearchInternational2Async(withdrawalIata, deliveryIata, startDate, endDate, code, country, groupsCodes, rentalsCodes, equipTypesCodes, displayWaitList, nearbyCities, atAirport, showInfo, null);
        }
        
        /// <remarks/>
        public void SimpleSearchInternational2Async(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, int country, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo, object userState) {
            if ((this.SimpleSearchInternational2OperationCompleted == null)) {
                this.SimpleSearchInternational2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchInternational2OperationCompleted);
            }
            this.InvokeAsync("SimpleSearchInternational2", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        displayWaitList,
                        nearbyCities,
                        atAirport,
                        showInfo}, this.SimpleSearchInternational2OperationCompleted, userState);
        }
        
        private void OnSimpleSearchInternational2OperationCompleted(object arg) {
            if ((this.SimpleSearchInternational2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchInternational2Completed(this, new SimpleSearchInternational2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearchAutoCurrency2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearchAutoCurrency2(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo) {
            object[] results = this.Invoke("SimpleSearchAutoCurrency2", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        displayWaitList,
                        nearbyCities,
                        atAirport,
                        showInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchAutoCurrency2Async(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo) {
            this.SimpleSearchAutoCurrency2Async(withdrawalIata, deliveryIata, startDate, endDate, code, groupsCodes, rentalsCodes, equipTypesCodes, displayWaitList, nearbyCities, atAirport, showInfo, null);
        }
        
        /// <remarks/>
        public void SimpleSearchAutoCurrency2Async(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo, object userState) {
            if ((this.SimpleSearchAutoCurrency2OperationCompleted == null)) {
                this.SimpleSearchAutoCurrency2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchAutoCurrency2OperationCompleted);
            }
            this.InvokeAsync("SimpleSearchAutoCurrency2", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        displayWaitList,
                        nearbyCities,
                        atAirport,
                        showInfo}, this.SimpleSearchAutoCurrency2OperationCompleted, userState);
        }
        
        private void OnSimpleSearchAutoCurrency2OperationCompleted(object arg) {
            if ((this.SimpleSearchAutoCurrency2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchAutoCurrency2Completed(this, new SimpleSearchAutoCurrency2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearchInternational3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearchInternational3(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, int country, string groupsCodes, string rentalsCodes, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo) {
            object[] results = this.Invoke("SimpleSearchInternational3", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        nearbyCities,
                        atAirport,
                        showInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchInternational3Async(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, int country, string groupsCodes, string rentalsCodes, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo) {
            this.SimpleSearchInternational3Async(withdrawalIata, deliveryIata, startDate, endDate, code, country, groupsCodes, rentalsCodes, equipTypesCodes, corpDiscountNmbr, displayWaitList, nearbyCities, atAirport, showInfo, null);
        }
        
        /// <remarks/>
        public void SimpleSearchInternational3Async(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, int country, string groupsCodes, string rentalsCodes, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo, object userState) {
            if ((this.SimpleSearchInternational3OperationCompleted == null)) {
                this.SimpleSearchInternational3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchInternational3OperationCompleted);
            }
            this.InvokeAsync("SimpleSearchInternational3", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        nearbyCities,
                        atAirport,
                        showInfo}, this.SimpleSearchInternational3OperationCompleted, userState);
        }
        
        private void OnSimpleSearchInternational3OperationCompleted(object arg) {
            if ((this.SimpleSearchInternational3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchInternational3Completed(this, new SimpleSearchInternational3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearchAutoCurrency3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearchAutoCurrency3(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo) {
            object[] results = this.Invoke("SimpleSearchAutoCurrency3", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        nearbyCities,
                        atAirport,
                        showInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchAutoCurrency3Async(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo) {
            this.SimpleSearchAutoCurrency3Async(withdrawalIata, deliveryIata, startDate, endDate, code, groupsCodes, rentalsCodes, equipTypesCodes, corpDiscountNmbr, displayWaitList, nearbyCities, atAirport, showInfo, null);
        }
        
        /// <remarks/>
        public void SimpleSearchAutoCurrency3Async(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo, object userState) {
            if ((this.SimpleSearchAutoCurrency3OperationCompleted == null)) {
                this.SimpleSearchAutoCurrency3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchAutoCurrency3OperationCompleted);
            }
            this.InvokeAsync("SimpleSearchAutoCurrency3", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        nearbyCities,
                        atAirport,
                        showInfo}, this.SimpleSearchAutoCurrency3OperationCompleted, userState);
        }
        
        private void OnSimpleSearchAutoCurrency3OperationCompleted(object arg) {
            if ((this.SimpleSearchAutoCurrency3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchAutoCurrency3Completed(this, new SimpleSearchAutoCurrency3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearchInternational4", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearchInternational4(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, int country, string groupsCodes, string rentalsCodes, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo) {
            object[] results = this.Invoke("SimpleSearchInternational4", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        nearbyCities,
                        atAirport,
                        showInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchInternational4Async(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, int country, string groupsCodes, string rentalsCodes, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo) {
            this.SimpleSearchInternational4Async(withdrawalIata, deliveryIata, startDate, endDate, code, country, groupsCodes, rentalsCodes, equipTypesCodes, corpDiscountNmbr, displayWaitList, nearbyCities, atAirport, showInfo, null);
        }
        
        /// <remarks/>
        public void SimpleSearchInternational4Async(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, int country, string groupsCodes, string rentalsCodes, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo, object userState) {
            if ((this.SimpleSearchInternational4OperationCompleted == null)) {
                this.SimpleSearchInternational4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchInternational4OperationCompleted);
            }
            this.InvokeAsync("SimpleSearchInternational4", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        nearbyCities,
                        atAirport,
                        showInfo}, this.SimpleSearchInternational4OperationCompleted, userState);
        }
        
        private void OnSimpleSearchInternational4OperationCompleted(object arg) {
            if ((this.SimpleSearchInternational4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchInternational4Completed(this, new SimpleSearchInternational4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimpleSearchAutoCurrency4", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SimpleSearchAutoCurrency4(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo) {
            object[] results = this.Invoke("SimpleSearchAutoCurrency4", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        nearbyCities,
                        atAirport,
                        showInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleSearchAutoCurrency4Async(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo) {
            this.SimpleSearchAutoCurrency4Async(withdrawalIata, deliveryIata, startDate, endDate, code, groupsCodes, rentalsCodes, equipTypesCodes, corpDiscountNmbr, displayWaitList, nearbyCities, atAirport, showInfo, null);
        }
        
        /// <remarks/>
        public void SimpleSearchAutoCurrency4Async(string withdrawalIata, string deliveryIata, string startDate, string endDate, int code, string groupsCodes, string rentalsCodes, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool nearbyCities, bool atAirport, bool showInfo, object userState) {
            if ((this.SimpleSearchAutoCurrency4OperationCompleted == null)) {
                this.SimpleSearchAutoCurrency4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleSearchAutoCurrency4OperationCompleted);
            }
            this.InvokeAsync("SimpleSearchAutoCurrency4", new object[] {
                        withdrawalIata,
                        deliveryIata,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalsCodes,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        nearbyCities,
                        atAirport,
                        showInfo}, this.SimpleSearchAutoCurrency4OperationCompleted, userState);
        }
        
        private void OnSimpleSearchAutoCurrency4OperationCompleted(object arg) {
            if ((this.SimpleSearchAutoCurrency4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleSearchAutoCurrency4Completed(this, new SimpleSearchAutoCurrency4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RentalSearch(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int rentalCode) {
            object[] results = this.Invoke("RentalSearch", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        rentalCode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RentalSearchAsync(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int rentalCode) {
            this.RentalSearchAsync(withdrawalLocation, deliveryLocation, startDate, endDate, code, rentalCode, null);
        }
        
        /// <remarks/>
        public void RentalSearchAsync(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int rentalCode, object userState) {
            if ((this.RentalSearchOperationCompleted == null)) {
                this.RentalSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSearchOperationCompleted);
            }
            this.InvokeAsync("RentalSearch", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        rentalCode}, this.RentalSearchOperationCompleted, userState);
        }
        
        private void OnRentalSearchOperationCompleted(object arg) {
            if ((this.RentalSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSearchCompleted(this, new RentalSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSearchGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RentalSearchGroup(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode) {
            object[] results = this.Invoke("RentalSearchGroup", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RentalSearchGroupAsync(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode) {
            this.RentalSearchGroupAsync(withdrawalLocation, deliveryLocation, startDate, endDate, code, groupsCodes, rentalCode, null);
        }
        
        /// <remarks/>
        public void RentalSearchGroupAsync(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, object userState) {
            if ((this.RentalSearchGroupOperationCompleted == null)) {
                this.RentalSearchGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSearchGroupOperationCompleted);
            }
            this.InvokeAsync("RentalSearchGroup", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode}, this.RentalSearchGroupOperationCompleted, userState);
        }
        
        private void OnRentalSearchGroupOperationCompleted(object arg) {
            if ((this.RentalSearchGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSearchGroupCompleted(this, new RentalSearchGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSearchWaitList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RentalSearchWaitList(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, bool displayWaitList) {
            object[] results = this.Invoke("RentalSearchWaitList", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode,
                        displayWaitList});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RentalSearchWaitListAsync(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, bool displayWaitList) {
            this.RentalSearchWaitListAsync(withdrawalLocation, deliveryLocation, startDate, endDate, code, groupsCodes, rentalCode, displayWaitList, null);
        }
        
        /// <remarks/>
        public void RentalSearchWaitListAsync(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, bool displayWaitList, object userState) {
            if ((this.RentalSearchWaitListOperationCompleted == null)) {
                this.RentalSearchWaitListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSearchWaitListOperationCompleted);
            }
            this.InvokeAsync("RentalSearchWaitList", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode,
                        displayWaitList}, this.RentalSearchWaitListOperationCompleted, userState);
        }
        
        private void OnRentalSearchWaitListOperationCompleted(object arg) {
            if ((this.RentalSearchWaitListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSearchWaitListCompleted(this, new RentalSearchWaitListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSearchEquipTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RentalSearchEquipTypes(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList) {
            object[] results = this.Invoke("RentalSearchEquipTypes", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        displayWaitList});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RentalSearchEquipTypesAsync(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList) {
            this.RentalSearchEquipTypesAsync(withdrawalLocation, deliveryLocation, startDate, endDate, code, groupsCodes, rentalCode, equipTypesCodes, displayWaitList, null);
        }
        
        /// <remarks/>
        public void RentalSearchEquipTypesAsync(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList, object userState) {
            if ((this.RentalSearchEquipTypesOperationCompleted == null)) {
                this.RentalSearchEquipTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSearchEquipTypesOperationCompleted);
            }
            this.InvokeAsync("RentalSearchEquipTypes", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        displayWaitList}, this.RentalSearchEquipTypesOperationCompleted, userState);
        }
        
        private void OnRentalSearchEquipTypesOperationCompleted(object arg) {
            if ((this.RentalSearchEquipTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSearchEquipTypesCompleted(this, new RentalSearchEquipTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSearchInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RentalSearchInternational(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int country, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList) {
            object[] results = this.Invoke("RentalSearchInternational", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        displayWaitList});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RentalSearchInternationalAsync(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int country, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList) {
            this.RentalSearchInternationalAsync(withdrawalLocation, deliveryLocation, startDate, endDate, code, country, groupsCodes, rentalCode, equipTypesCodes, displayWaitList, null);
        }
        
        /// <remarks/>
        public void RentalSearchInternationalAsync(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int country, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList, object userState) {
            if ((this.RentalSearchInternationalOperationCompleted == null)) {
                this.RentalSearchInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSearchInternationalOperationCompleted);
            }
            this.InvokeAsync("RentalSearchInternational", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        displayWaitList}, this.RentalSearchInternationalOperationCompleted, userState);
        }
        
        private void OnRentalSearchInternationalOperationCompleted(object arg) {
            if ((this.RentalSearchInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSearchInternationalCompleted(this, new RentalSearchInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSearchAutoCurrency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RentalSearchAutoCurrency(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList) {
            object[] results = this.Invoke("RentalSearchAutoCurrency", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        displayWaitList});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RentalSearchAutoCurrencyAsync(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList) {
            this.RentalSearchAutoCurrencyAsync(withdrawalLocation, deliveryLocation, startDate, endDate, code, groupsCodes, rentalCode, equipTypesCodes, displayWaitList, null);
        }
        
        /// <remarks/>
        public void RentalSearchAutoCurrencyAsync(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList, object userState) {
            if ((this.RentalSearchAutoCurrencyOperationCompleted == null)) {
                this.RentalSearchAutoCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSearchAutoCurrencyOperationCompleted);
            }
            this.InvokeAsync("RentalSearchAutoCurrency", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        displayWaitList}, this.RentalSearchAutoCurrencyOperationCompleted, userState);
        }
        
        private void OnRentalSearchAutoCurrencyOperationCompleted(object arg) {
            if ((this.RentalSearchAutoCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSearchAutoCurrencyCompleted(this, new RentalSearchAutoCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSearchInternational2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RentalSearchInternational2(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int country, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList, bool showInfo) {
            object[] results = this.Invoke("RentalSearchInternational2", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        displayWaitList,
                        showInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RentalSearchInternational2Async(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int country, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList, bool showInfo) {
            this.RentalSearchInternational2Async(withdrawalLocation, deliveryLocation, startDate, endDate, code, country, groupsCodes, rentalCode, equipTypesCodes, displayWaitList, showInfo, null);
        }
        
        /// <remarks/>
        public void RentalSearchInternational2Async(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int country, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList, bool showInfo, object userState) {
            if ((this.RentalSearchInternational2OperationCompleted == null)) {
                this.RentalSearchInternational2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSearchInternational2OperationCompleted);
            }
            this.InvokeAsync("RentalSearchInternational2", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        displayWaitList,
                        showInfo}, this.RentalSearchInternational2OperationCompleted, userState);
        }
        
        private void OnRentalSearchInternational2OperationCompleted(object arg) {
            if ((this.RentalSearchInternational2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSearchInternational2Completed(this, new RentalSearchInternational2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSearchAutoCurrency2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RentalSearchAutoCurrency2(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList, bool showInfo) {
            object[] results = this.Invoke("RentalSearchAutoCurrency2", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        displayWaitList,
                        showInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RentalSearchAutoCurrency2Async(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList, bool showInfo) {
            this.RentalSearchAutoCurrency2Async(withdrawalLocation, deliveryLocation, startDate, endDate, code, groupsCodes, rentalCode, equipTypesCodes, displayWaitList, showInfo, null);
        }
        
        /// <remarks/>
        public void RentalSearchAutoCurrency2Async(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, bool displayWaitList, bool showInfo, object userState) {
            if ((this.RentalSearchAutoCurrency2OperationCompleted == null)) {
                this.RentalSearchAutoCurrency2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSearchAutoCurrency2OperationCompleted);
            }
            this.InvokeAsync("RentalSearchAutoCurrency2", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        displayWaitList,
                        showInfo}, this.RentalSearchAutoCurrency2OperationCompleted, userState);
        }
        
        private void OnRentalSearchAutoCurrency2OperationCompleted(object arg) {
            if ((this.RentalSearchAutoCurrency2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSearchAutoCurrency2Completed(this, new RentalSearchAutoCurrency2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSearchInternational3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RentalSearchInternational3(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int country, string groupsCodes, int rentalCode, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool showInfo) {
            object[] results = this.Invoke("RentalSearchInternational3", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        showInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RentalSearchInternational3Async(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int country, string groupsCodes, int rentalCode, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool showInfo) {
            this.RentalSearchInternational3Async(withdrawalLocation, deliveryLocation, startDate, endDate, code, country, groupsCodes, rentalCode, equipTypesCodes, corpDiscountNmbr, displayWaitList, showInfo, null);
        }
        
        /// <remarks/>
        public void RentalSearchInternational3Async(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int country, string groupsCodes, int rentalCode, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool showInfo, object userState) {
            if ((this.RentalSearchInternational3OperationCompleted == null)) {
                this.RentalSearchInternational3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSearchInternational3OperationCompleted);
            }
            this.InvokeAsync("RentalSearchInternational3", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        showInfo}, this.RentalSearchInternational3OperationCompleted, userState);
        }
        
        private void OnRentalSearchInternational3OperationCompleted(object arg) {
            if ((this.RentalSearchInternational3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSearchInternational3Completed(this, new RentalSearchInternational3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSearchAutoCurrency3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RentalSearchAutoCurrency3(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool showInfo) {
            object[] results = this.Invoke("RentalSearchAutoCurrency3", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        showInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RentalSearchAutoCurrency3Async(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool showInfo) {
            this.RentalSearchAutoCurrency3Async(withdrawalLocation, deliveryLocation, startDate, endDate, code, groupsCodes, rentalCode, equipTypesCodes, corpDiscountNmbr, displayWaitList, showInfo, null);
        }
        
        /// <remarks/>
        public void RentalSearchAutoCurrency3Async(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool showInfo, object userState) {
            if ((this.RentalSearchAutoCurrency3OperationCompleted == null)) {
                this.RentalSearchAutoCurrency3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSearchAutoCurrency3OperationCompleted);
            }
            this.InvokeAsync("RentalSearchAutoCurrency3", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        showInfo}, this.RentalSearchAutoCurrency3OperationCompleted, userState);
        }
        
        private void OnRentalSearchAutoCurrency3OperationCompleted(object arg) {
            if ((this.RentalSearchAutoCurrency3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSearchAutoCurrency3Completed(this, new RentalSearchAutoCurrency3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSearchInternational4", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RentalSearchInternational4(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int country, string groupsCodes, int rentalCode, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool showInfo) {
            object[] results = this.Invoke("RentalSearchInternational4", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        showInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RentalSearchInternational4Async(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int country, string groupsCodes, int rentalCode, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool showInfo) {
            this.RentalSearchInternational4Async(withdrawalLocation, deliveryLocation, startDate, endDate, code, country, groupsCodes, rentalCode, equipTypesCodes, corpDiscountNmbr, displayWaitList, showInfo, null);
        }
        
        /// <remarks/>
        public void RentalSearchInternational4Async(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, int country, string groupsCodes, int rentalCode, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool showInfo, object userState) {
            if ((this.RentalSearchInternational4OperationCompleted == null)) {
                this.RentalSearchInternational4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSearchInternational4OperationCompleted);
            }
            this.InvokeAsync("RentalSearchInternational4", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        country,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        showInfo}, this.RentalSearchInternational4OperationCompleted, userState);
        }
        
        private void OnRentalSearchInternational4OperationCompleted(object arg) {
            if ((this.RentalSearchInternational4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSearchInternational4Completed(this, new RentalSearchInternational4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalSearchAutoCurrency4", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RentalSearchAutoCurrency4(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool showInfo) {
            object[] results = this.Invoke("RentalSearchAutoCurrency4", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        showInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RentalSearchAutoCurrency4Async(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool showInfo) {
            this.RentalSearchAutoCurrency4Async(withdrawalLocation, deliveryLocation, startDate, endDate, code, groupsCodes, rentalCode, equipTypesCodes, corpDiscountNmbr, displayWaitList, showInfo, null);
        }
        
        /// <remarks/>
        public void RentalSearchAutoCurrency4Async(string withdrawalLocation, string deliveryLocation, string startDate, string endDate, int code, string groupsCodes, int rentalCode, string equipTypesCodes, string corpDiscountNmbr, bool displayWaitList, bool showInfo, object userState) {
            if ((this.RentalSearchAutoCurrency4OperationCompleted == null)) {
                this.RentalSearchAutoCurrency4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalSearchAutoCurrency4OperationCompleted);
            }
            this.InvokeAsync("RentalSearchAutoCurrency4", new object[] {
                        withdrawalLocation,
                        deliveryLocation,
                        startDate,
                        endDate,
                        code,
                        groupsCodes,
                        rentalCode,
                        equipTypesCodes,
                        corpDiscountNmbr,
                        displayWaitList,
                        showInfo}, this.RentalSearchAutoCurrency4OperationCompleted, userState);
        }
        
        private void OnRentalSearchAutoCurrency4OperationCompleted(object arg) {
            if ((this.RentalSearchAutoCurrency4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalSearchAutoCurrency4Completed(this, new RentalSearchAutoCurrency4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PassiveReserve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PassiveReserve(string url, int code) {
            object[] results = this.Invoke("PassiveReserve", new object[] {
                        url,
                        code});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PassiveReserveAsync(string url, int code) {
            this.PassiveReserveAsync(url, code, null);
        }
        
        /// <remarks/>
        public void PassiveReserveAsync(string url, int code, object userState) {
            if ((this.PassiveReserveOperationCompleted == null)) {
                this.PassiveReserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPassiveReserveOperationCompleted);
            }
            this.InvokeAsync("PassiveReserve", new object[] {
                        url,
                        code}, this.PassiveReserveOperationCompleted, userState);
        }
        
        private void OnPassiveReserveOperationCompleted(object arg) {
            if ((this.PassiveReserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PassiveReserveCompleted(this, new PassiveReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Reserve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Reserve(string xml, int code) {
            object[] results = this.Invoke("Reserve", new object[] {
                        xml,
                        code});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveAsync(string xml, int code) {
            this.ReserveAsync(xml, code, null);
        }
        
        /// <remarks/>
        public void ReserveAsync(string xml, int code, object userState) {
            if ((this.ReserveOperationCompleted == null)) {
                this.ReserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveOperationCompleted);
            }
            this.InvokeAsync("Reserve", new object[] {
                        xml,
                        code}, this.ReserveOperationCompleted, userState);
        }
        
        private void OnReserveOperationCompleted(object arg) {
            if ((this.ReserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveCompleted(this, new ReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReserveWaitlist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReserveWaitlist(int code, string xml, string notificationUrl) {
            object[] results = this.Invoke("ReserveWaitlist", new object[] {
                        code,
                        xml,
                        notificationUrl});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveWaitlistAsync(int code, string xml, string notificationUrl) {
            this.ReserveWaitlistAsync(code, xml, notificationUrl, null);
        }
        
        /// <remarks/>
        public void ReserveWaitlistAsync(int code, string xml, string notificationUrl, object userState) {
            if ((this.ReserveWaitlistOperationCompleted == null)) {
                this.ReserveWaitlistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveWaitlistOperationCompleted);
            }
            this.InvokeAsync("ReserveWaitlist", new object[] {
                        code,
                        xml,
                        notificationUrl}, this.ReserveWaitlistOperationCompleted, userState);
        }
        
        private void OnReserveWaitlistOperationCompleted(object arg) {
            if ((this.ReserveWaitlistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveWaitlistCompleted(this, new ReserveWaitlistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReserveInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReserveInternational(int code, int country, string xml, string notificationUrl) {
            object[] results = this.Invoke("ReserveInternational", new object[] {
                        code,
                        country,
                        xml,
                        notificationUrl});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveInternationalAsync(int code, int country, string xml, string notificationUrl) {
            this.ReserveInternationalAsync(code, country, xml, notificationUrl, null);
        }
        
        /// <remarks/>
        public void ReserveInternationalAsync(int code, int country, string xml, string notificationUrl, object userState) {
            if ((this.ReserveInternationalOperationCompleted == null)) {
                this.ReserveInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveInternationalOperationCompleted);
            }
            this.InvokeAsync("ReserveInternational", new object[] {
                        code,
                        country,
                        xml,
                        notificationUrl}, this.ReserveInternationalOperationCompleted, userState);
        }
        
        private void OnReserveInternationalOperationCompleted(object arg) {
            if ((this.ReserveInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveInternationalCompleted(this, new ReserveInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReserveAutoCurrency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReserveAutoCurrency(int code, string xml, string notificationUrl) {
            object[] results = this.Invoke("ReserveAutoCurrency", new object[] {
                        code,
                        xml,
                        notificationUrl});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveAutoCurrencyAsync(int code, string xml, string notificationUrl) {
            this.ReserveAutoCurrencyAsync(code, xml, notificationUrl, null);
        }
        
        /// <remarks/>
        public void ReserveAutoCurrencyAsync(int code, string xml, string notificationUrl, object userState) {
            if ((this.ReserveAutoCurrencyOperationCompleted == null)) {
                this.ReserveAutoCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveAutoCurrencyOperationCompleted);
            }
            this.InvokeAsync("ReserveAutoCurrency", new object[] {
                        code,
                        xml,
                        notificationUrl}, this.ReserveAutoCurrencyOperationCompleted, userState);
        }
        
        private void OnReserveAutoCurrencyOperationCompleted(object arg) {
            if ((this.ReserveAutoCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveAutoCurrencyCompleted(this, new ReserveAutoCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Reserve2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Reserve2(string xml, int code, string observation) {
            object[] results = this.Invoke("Reserve2", new object[] {
                        xml,
                        code,
                        observation});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void Reserve2Async(string xml, int code, string observation) {
            this.Reserve2Async(xml, code, observation, null);
        }
        
        /// <remarks/>
        public void Reserve2Async(string xml, int code, string observation, object userState) {
            if ((this.Reserve2OperationCompleted == null)) {
                this.Reserve2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserve2OperationCompleted);
            }
            this.InvokeAsync("Reserve2", new object[] {
                        xml,
                        code,
                        observation}, this.Reserve2OperationCompleted, userState);
        }
        
        private void OnReserve2OperationCompleted(object arg) {
            if ((this.Reserve2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Reserve2Completed(this, new Reserve2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReserveWaitlist2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReserveWaitlist2(int code, string xml, string notificationUrl, string observation) {
            object[] results = this.Invoke("ReserveWaitlist2", new object[] {
                        code,
                        xml,
                        notificationUrl,
                        observation});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveWaitlist2Async(int code, string xml, string notificationUrl, string observation) {
            this.ReserveWaitlist2Async(code, xml, notificationUrl, observation, null);
        }
        
        /// <remarks/>
        public void ReserveWaitlist2Async(int code, string xml, string notificationUrl, string observation, object userState) {
            if ((this.ReserveWaitlist2OperationCompleted == null)) {
                this.ReserveWaitlist2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveWaitlist2OperationCompleted);
            }
            this.InvokeAsync("ReserveWaitlist2", new object[] {
                        code,
                        xml,
                        notificationUrl,
                        observation}, this.ReserveWaitlist2OperationCompleted, userState);
        }
        
        private void OnReserveWaitlist2OperationCompleted(object arg) {
            if ((this.ReserveWaitlist2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveWaitlist2Completed(this, new ReserveWaitlist2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReserveInternational2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReserveInternational2(int code, int country, string xml, string notificationUrl, string observation) {
            object[] results = this.Invoke("ReserveInternational2", new object[] {
                        code,
                        country,
                        xml,
                        notificationUrl,
                        observation});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveInternational2Async(int code, int country, string xml, string notificationUrl, string observation) {
            this.ReserveInternational2Async(code, country, xml, notificationUrl, observation, null);
        }
        
        /// <remarks/>
        public void ReserveInternational2Async(int code, int country, string xml, string notificationUrl, string observation, object userState) {
            if ((this.ReserveInternational2OperationCompleted == null)) {
                this.ReserveInternational2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveInternational2OperationCompleted);
            }
            this.InvokeAsync("ReserveInternational2", new object[] {
                        code,
                        country,
                        xml,
                        notificationUrl,
                        observation}, this.ReserveInternational2OperationCompleted, userState);
        }
        
        private void OnReserveInternational2OperationCompleted(object arg) {
            if ((this.ReserveInternational2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveInternational2Completed(this, new ReserveInternational2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReserveAutoCurrency2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReserveAutoCurrency2(int code, string xml, string notificationUrl, string observation) {
            object[] results = this.Invoke("ReserveAutoCurrency2", new object[] {
                        code,
                        xml,
                        notificationUrl,
                        observation});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveAutoCurrency2Async(int code, string xml, string notificationUrl, string observation) {
            this.ReserveAutoCurrency2Async(code, xml, notificationUrl, observation, null);
        }
        
        /// <remarks/>
        public void ReserveAutoCurrency2Async(int code, string xml, string notificationUrl, string observation, object userState) {
            if ((this.ReserveAutoCurrency2OperationCompleted == null)) {
                this.ReserveAutoCurrency2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveAutoCurrency2OperationCompleted);
            }
            this.InvokeAsync("ReserveAutoCurrency2", new object[] {
                        code,
                        xml,
                        notificationUrl,
                        observation}, this.ReserveAutoCurrency2OperationCompleted, userState);
        }
        
        private void OnReserveAutoCurrency2OperationCompleted(object arg) {
            if ((this.ReserveAutoCurrency2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveAutoCurrency2Completed(this, new ReserveAutoCurrency2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReserveInternational3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReserveInternational3(int code, int country, string xml, string notificationUrl, string observation) {
            object[] results = this.Invoke("ReserveInternational3", new object[] {
                        code,
                        country,
                        xml,
                        notificationUrl,
                        observation});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveInternational3Async(int code, int country, string xml, string notificationUrl, string observation) {
            this.ReserveInternational3Async(code, country, xml, notificationUrl, observation, null);
        }
        
        /// <remarks/>
        public void ReserveInternational3Async(int code, int country, string xml, string notificationUrl, string observation, object userState) {
            if ((this.ReserveInternational3OperationCompleted == null)) {
                this.ReserveInternational3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveInternational3OperationCompleted);
            }
            this.InvokeAsync("ReserveInternational3", new object[] {
                        code,
                        country,
                        xml,
                        notificationUrl,
                        observation}, this.ReserveInternational3OperationCompleted, userState);
        }
        
        private void OnReserveInternational3OperationCompleted(object arg) {
            if ((this.ReserveInternational3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveInternational3Completed(this, new ReserveInternational3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReserveAutoCurrency3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReserveAutoCurrency3(int code, string xml, string notificationUrl, string observation) {
            object[] results = this.Invoke("ReserveAutoCurrency3", new object[] {
                        code,
                        xml,
                        notificationUrl,
                        observation});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveAutoCurrency3Async(int code, string xml, string notificationUrl, string observation) {
            this.ReserveAutoCurrency3Async(code, xml, notificationUrl, observation, null);
        }
        
        /// <remarks/>
        public void ReserveAutoCurrency3Async(int code, string xml, string notificationUrl, string observation, object userState) {
            if ((this.ReserveAutoCurrency3OperationCompleted == null)) {
                this.ReserveAutoCurrency3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveAutoCurrency3OperationCompleted);
            }
            this.InvokeAsync("ReserveAutoCurrency3", new object[] {
                        code,
                        xml,
                        notificationUrl,
                        observation}, this.ReserveAutoCurrency3OperationCompleted, userState);
        }
        
        private void OnReserveAutoCurrency3OperationCompleted(object arg) {
            if ((this.ReserveAutoCurrency3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveAutoCurrency3Completed(this, new ReserveAutoCurrency3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PassiveCancelReserve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PassiveCancelReserve(int code, string url) {
            object[] results = this.Invoke("PassiveCancelReserve", new object[] {
                        code,
                        url});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PassiveCancelReserveAsync(int code, string url) {
            this.PassiveCancelReserveAsync(code, url, null);
        }
        
        /// <remarks/>
        public void PassiveCancelReserveAsync(int code, string url, object userState) {
            if ((this.PassiveCancelReserveOperationCompleted == null)) {
                this.PassiveCancelReserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPassiveCancelReserveOperationCompleted);
            }
            this.InvokeAsync("PassiveCancelReserve", new object[] {
                        code,
                        url}, this.PassiveCancelReserveOperationCompleted, userState);
        }
        
        private void OnPassiveCancelReserveOperationCompleted(object arg) {
            if ((this.PassiveCancelReserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PassiveCancelReserveCompleted(this, new PassiveCancelReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelReserve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CancelReserve(int code, string xml) {
            object[] results = this.Invoke("CancelReserve", new object[] {
                        code,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CancelReserveAsync(int code, string xml) {
            this.CancelReserveAsync(code, xml, null);
        }
        
        /// <remarks/>
        public void CancelReserveAsync(int code, string xml, object userState) {
            if ((this.CancelReserveOperationCompleted == null)) {
                this.CancelReserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelReserveOperationCompleted);
            }
            this.InvokeAsync("CancelReserve", new object[] {
                        code,
                        xml}, this.CancelReserveOperationCompleted, userState);
        }
        
        private void OnCancelReserveOperationCompleted(object arg) {
            if ((this.CancelReserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelReserveCompleted(this, new CancelReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelReserveInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CancelReserveInternational(int code, int country, string xml) {
            object[] results = this.Invoke("CancelReserveInternational", new object[] {
                        code,
                        country,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CancelReserveInternationalAsync(int code, int country, string xml) {
            this.CancelReserveInternationalAsync(code, country, xml, null);
        }
        
        /// <remarks/>
        public void CancelReserveInternationalAsync(int code, int country, string xml, object userState) {
            if ((this.CancelReserveInternationalOperationCompleted == null)) {
                this.CancelReserveInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelReserveInternationalOperationCompleted);
            }
            this.InvokeAsync("CancelReserveInternational", new object[] {
                        code,
                        country,
                        xml}, this.CancelReserveInternationalOperationCompleted, userState);
        }
        
        private void OnCancelReserveInternationalOperationCompleted(object arg) {
            if ((this.CancelReserveInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelReserveInternationalCompleted(this, new CancelReserveInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelReserveAutoCurrency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CancelReserveAutoCurrency(int code, string xml) {
            object[] results = this.Invoke("CancelReserveAutoCurrency", new object[] {
                        code,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CancelReserveAutoCurrencyAsync(int code, string xml) {
            this.CancelReserveAutoCurrencyAsync(code, xml, null);
        }
        
        /// <remarks/>
        public void CancelReserveAutoCurrencyAsync(int code, string xml, object userState) {
            if ((this.CancelReserveAutoCurrencyOperationCompleted == null)) {
                this.CancelReserveAutoCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelReserveAutoCurrencyOperationCompleted);
            }
            this.InvokeAsync("CancelReserveAutoCurrency", new object[] {
                        code,
                        xml}, this.CancelReserveAutoCurrencyOperationCompleted, userState);
        }
        
        private void OnCancelReserveAutoCurrencyOperationCompleted(object arg) {
            if ((this.CancelReserveAutoCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelReserveAutoCurrencyCompleted(this, new CancelReserveAutoCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelReserveInternational2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CancelReserveInternational2(int code, int country, string xml) {
            object[] results = this.Invoke("CancelReserveInternational2", new object[] {
                        code,
                        country,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CancelReserveInternational2Async(int code, int country, string xml) {
            this.CancelReserveInternational2Async(code, country, xml, null);
        }
        
        /// <remarks/>
        public void CancelReserveInternational2Async(int code, int country, string xml, object userState) {
            if ((this.CancelReserveInternational2OperationCompleted == null)) {
                this.CancelReserveInternational2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelReserveInternational2OperationCompleted);
            }
            this.InvokeAsync("CancelReserveInternational2", new object[] {
                        code,
                        country,
                        xml}, this.CancelReserveInternational2OperationCompleted, userState);
        }
        
        private void OnCancelReserveInternational2OperationCompleted(object arg) {
            if ((this.CancelReserveInternational2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelReserveInternational2Completed(this, new CancelReserveInternational2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelReserveAutoCurrency2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CancelReserveAutoCurrency2(int code, string xml) {
            object[] results = this.Invoke("CancelReserveAutoCurrency2", new object[] {
                        code,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CancelReserveAutoCurrency2Async(int code, string xml) {
            this.CancelReserveAutoCurrency2Async(code, xml, null);
        }
        
        /// <remarks/>
        public void CancelReserveAutoCurrency2Async(int code, string xml, object userState) {
            if ((this.CancelReserveAutoCurrency2OperationCompleted == null)) {
                this.CancelReserveAutoCurrency2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelReserveAutoCurrency2OperationCompleted);
            }
            this.InvokeAsync("CancelReserveAutoCurrency2", new object[] {
                        code,
                        xml}, this.CancelReserveAutoCurrency2OperationCompleted, userState);
        }
        
        private void OnCancelReserveAutoCurrency2OperationCompleted(object arg) {
            if ((this.CancelReserveAutoCurrency2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelReserveAutoCurrency2Completed(this, new CancelReserveAutoCurrency2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PassiveModifyReserve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PassiveModifyReserve(int code, string url) {
            object[] results = this.Invoke("PassiveModifyReserve", new object[] {
                        code,
                        url});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PassiveModifyReserveAsync(int code, string url) {
            this.PassiveModifyReserveAsync(code, url, null);
        }
        
        /// <remarks/>
        public void PassiveModifyReserveAsync(int code, string url, object userState) {
            if ((this.PassiveModifyReserveOperationCompleted == null)) {
                this.PassiveModifyReserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPassiveModifyReserveOperationCompleted);
            }
            this.InvokeAsync("PassiveModifyReserve", new object[] {
                        code,
                        url}, this.PassiveModifyReserveOperationCompleted, userState);
        }
        
        private void OnPassiveModifyReserveOperationCompleted(object arg) {
            if ((this.PassiveModifyReserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PassiveModifyReserveCompleted(this, new PassiveModifyReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyReserve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ModifyReserve(int code, string xml) {
            object[] results = this.Invoke("ModifyReserve", new object[] {
                        code,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyReserveAsync(int code, string xml) {
            this.ModifyReserveAsync(code, xml, null);
        }
        
        /// <remarks/>
        public void ModifyReserveAsync(int code, string xml, object userState) {
            if ((this.ModifyReserveOperationCompleted == null)) {
                this.ModifyReserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyReserveOperationCompleted);
            }
            this.InvokeAsync("ModifyReserve", new object[] {
                        code,
                        xml}, this.ModifyReserveOperationCompleted, userState);
        }
        
        private void OnModifyReserveOperationCompleted(object arg) {
            if ((this.ModifyReserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyReserveCompleted(this, new ModifyReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyReserveInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ModifyReserveInternational(int code, int country, string xml) {
            object[] results = this.Invoke("ModifyReserveInternational", new object[] {
                        code,
                        country,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyReserveInternationalAsync(int code, int country, string xml) {
            this.ModifyReserveInternationalAsync(code, country, xml, null);
        }
        
        /// <remarks/>
        public void ModifyReserveInternationalAsync(int code, int country, string xml, object userState) {
            if ((this.ModifyReserveInternationalOperationCompleted == null)) {
                this.ModifyReserveInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyReserveInternationalOperationCompleted);
            }
            this.InvokeAsync("ModifyReserveInternational", new object[] {
                        code,
                        country,
                        xml}, this.ModifyReserveInternationalOperationCompleted, userState);
        }
        
        private void OnModifyReserveInternationalOperationCompleted(object arg) {
            if ((this.ModifyReserveInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyReserveInternationalCompleted(this, new ModifyReserveInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyReserveAutoCurrency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ModifyReserveAutoCurrency(int code, string xml) {
            object[] results = this.Invoke("ModifyReserveAutoCurrency", new object[] {
                        code,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyReserveAutoCurrencyAsync(int code, string xml) {
            this.ModifyReserveAutoCurrencyAsync(code, xml, null);
        }
        
        /// <remarks/>
        public void ModifyReserveAutoCurrencyAsync(int code, string xml, object userState) {
            if ((this.ModifyReserveAutoCurrencyOperationCompleted == null)) {
                this.ModifyReserveAutoCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyReserveAutoCurrencyOperationCompleted);
            }
            this.InvokeAsync("ModifyReserveAutoCurrency", new object[] {
                        code,
                        xml}, this.ModifyReserveAutoCurrencyOperationCompleted, userState);
        }
        
        private void OnModifyReserveAutoCurrencyOperationCompleted(object arg) {
            if ((this.ModifyReserveAutoCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyReserveAutoCurrencyCompleted(this, new ModifyReserveAutoCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyReserveInternational2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ModifyReserveInternational2(int code, int country, string xml) {
            object[] results = this.Invoke("ModifyReserveInternational2", new object[] {
                        code,
                        country,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyReserveInternational2Async(int code, int country, string xml) {
            this.ModifyReserveInternational2Async(code, country, xml, null);
        }
        
        /// <remarks/>
        public void ModifyReserveInternational2Async(int code, int country, string xml, object userState) {
            if ((this.ModifyReserveInternational2OperationCompleted == null)) {
                this.ModifyReserveInternational2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyReserveInternational2OperationCompleted);
            }
            this.InvokeAsync("ModifyReserveInternational2", new object[] {
                        code,
                        country,
                        xml}, this.ModifyReserveInternational2OperationCompleted, userState);
        }
        
        private void OnModifyReserveInternational2OperationCompleted(object arg) {
            if ((this.ModifyReserveInternational2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyReserveInternational2Completed(this, new ModifyReserveInternational2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyReserveAutoCurrency2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ModifyReserveAutoCurrency2(int code, string xml) {
            object[] results = this.Invoke("ModifyReserveAutoCurrency2", new object[] {
                        code,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyReserveAutoCurrency2Async(int code, string xml) {
            this.ModifyReserveAutoCurrency2Async(code, xml, null);
        }
        
        /// <remarks/>
        public void ModifyReserveAutoCurrency2Async(int code, string xml, object userState) {
            if ((this.ModifyReserveAutoCurrency2OperationCompleted == null)) {
                this.ModifyReserveAutoCurrency2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyReserveAutoCurrency2OperationCompleted);
            }
            this.InvokeAsync("ModifyReserveAutoCurrency2", new object[] {
                        code,
                        xml}, this.ModifyReserveAutoCurrency2OperationCompleted, userState);
        }
        
        private void OnModifyReserveAutoCurrency2OperationCompleted(object arg) {
            if ((this.ModifyReserveAutoCurrency2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyReserveAutoCurrency2Completed(this, new ModifyReserveAutoCurrency2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PassiveViewReserve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PassiveViewReserve(int code, string url) {
            object[] results = this.Invoke("PassiveViewReserve", new object[] {
                        code,
                        url});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PassiveViewReserveAsync(int code, string url) {
            this.PassiveViewReserveAsync(code, url, null);
        }
        
        /// <remarks/>
        public void PassiveViewReserveAsync(int code, string url, object userState) {
            if ((this.PassiveViewReserveOperationCompleted == null)) {
                this.PassiveViewReserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPassiveViewReserveOperationCompleted);
            }
            this.InvokeAsync("PassiveViewReserve", new object[] {
                        code,
                        url}, this.PassiveViewReserveOperationCompleted, userState);
        }
        
        private void OnPassiveViewReserveOperationCompleted(object arg) {
            if ((this.PassiveViewReserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PassiveViewReserveCompleted(this, new PassiveViewReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViewReserve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ViewReserve(int code, string xml) {
            object[] results = this.Invoke("ViewReserve", new object[] {
                        code,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ViewReserveAsync(int code, string xml) {
            this.ViewReserveAsync(code, xml, null);
        }
        
        /// <remarks/>
        public void ViewReserveAsync(int code, string xml, object userState) {
            if ((this.ViewReserveOperationCompleted == null)) {
                this.ViewReserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViewReserveOperationCompleted);
            }
            this.InvokeAsync("ViewReserve", new object[] {
                        code,
                        xml}, this.ViewReserveOperationCompleted, userState);
        }
        
        private void OnViewReserveOperationCompleted(object arg) {
            if ((this.ViewReserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViewReserveCompleted(this, new ViewReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViewReserveInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ViewReserveInternational(int code, int country, string xml) {
            object[] results = this.Invoke("ViewReserveInternational", new object[] {
                        code,
                        country,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ViewReserveInternationalAsync(int code, int country, string xml) {
            this.ViewReserveInternationalAsync(code, country, xml, null);
        }
        
        /// <remarks/>
        public void ViewReserveInternationalAsync(int code, int country, string xml, object userState) {
            if ((this.ViewReserveInternationalOperationCompleted == null)) {
                this.ViewReserveInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViewReserveInternationalOperationCompleted);
            }
            this.InvokeAsync("ViewReserveInternational", new object[] {
                        code,
                        country,
                        xml}, this.ViewReserveInternationalOperationCompleted, userState);
        }
        
        private void OnViewReserveInternationalOperationCompleted(object arg) {
            if ((this.ViewReserveInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViewReserveInternationalCompleted(this, new ViewReserveInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViewReserveAutoCurrency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ViewReserveAutoCurrency(int code, string xml) {
            object[] results = this.Invoke("ViewReserveAutoCurrency", new object[] {
                        code,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ViewReserveAutoCurrencyAsync(int code, string xml) {
            this.ViewReserveAutoCurrencyAsync(code, xml, null);
        }
        
        /// <remarks/>
        public void ViewReserveAutoCurrencyAsync(int code, string xml, object userState) {
            if ((this.ViewReserveAutoCurrencyOperationCompleted == null)) {
                this.ViewReserveAutoCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViewReserveAutoCurrencyOperationCompleted);
            }
            this.InvokeAsync("ViewReserveAutoCurrency", new object[] {
                        code,
                        xml}, this.ViewReserveAutoCurrencyOperationCompleted, userState);
        }
        
        private void OnViewReserveAutoCurrencyOperationCompleted(object arg) {
            if ((this.ViewReserveAutoCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViewReserveAutoCurrencyCompleted(this, new ViewReserveAutoCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViewReserveInternational2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ViewReserveInternational2(int code, int country, string xml) {
            object[] results = this.Invoke("ViewReserveInternational2", new object[] {
                        code,
                        country,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ViewReserveInternational2Async(int code, int country, string xml) {
            this.ViewReserveInternational2Async(code, country, xml, null);
        }
        
        /// <remarks/>
        public void ViewReserveInternational2Async(int code, int country, string xml, object userState) {
            if ((this.ViewReserveInternational2OperationCompleted == null)) {
                this.ViewReserveInternational2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnViewReserveInternational2OperationCompleted);
            }
            this.InvokeAsync("ViewReserveInternational2", new object[] {
                        code,
                        country,
                        xml}, this.ViewReserveInternational2OperationCompleted, userState);
        }
        
        private void OnViewReserveInternational2OperationCompleted(object arg) {
            if ((this.ViewReserveInternational2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViewReserveInternational2Completed(this, new ViewReserveInternational2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViewReserveAutoCurrency2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ViewReserveAutoCurrency2(int code, string xml) {
            object[] results = this.Invoke("ViewReserveAutoCurrency2", new object[] {
                        code,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ViewReserveAutoCurrency2Async(int code, string xml) {
            this.ViewReserveAutoCurrency2Async(code, xml, null);
        }
        
        /// <remarks/>
        public void ViewReserveAutoCurrency2Async(int code, string xml, object userState) {
            if ((this.ViewReserveAutoCurrency2OperationCompleted == null)) {
                this.ViewReserveAutoCurrency2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnViewReserveAutoCurrency2OperationCompleted);
            }
            this.InvokeAsync("ViewReserveAutoCurrency2", new object[] {
                        code,
                        xml}, this.ViewReserveAutoCurrency2OperationCompleted, userState);
        }
        
        private void OnViewReserveAutoCurrency2OperationCompleted(object arg) {
            if ((this.ViewReserveAutoCurrency2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViewReserveAutoCurrency2Completed(this, new ViewReserveAutoCurrency2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Groups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] Groups() {
            object[] results = this.Invoke("Groups", new object[0]);
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupsAsync() {
            this.GroupsAsync(null);
        }
        
        /// <remarks/>
        public void GroupsAsync(object userState) {
            if ((this.GroupsOperationCompleted == null)) {
                this.GroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupsOperationCompleted);
            }
            this.InvokeAsync("Groups", new object[0], this.GroupsOperationCompleted, userState);
        }
        
        private void OnGroupsOperationCompleted(object arg) {
            if ((this.GroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupsCompleted(this, new GroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalGroups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RentalGroup[] RentalGroups(int rentalCode) {
            object[] results = this.Invoke("RentalGroups", new object[] {
                        rentalCode});
            return ((RentalGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalGroupsAsync(int rentalCode) {
            this.RentalGroupsAsync(rentalCode, null);
        }
        
        /// <remarks/>
        public void RentalGroupsAsync(int rentalCode, object userState) {
            if ((this.RentalGroupsOperationCompleted == null)) {
                this.RentalGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalGroupsOperationCompleted);
            }
            this.InvokeAsync("RentalGroups", new object[] {
                        rentalCode}, this.RentalGroupsOperationCompleted, userState);
        }
        
        private void OnRentalGroupsOperationCompleted(object arg) {
            if ((this.RentalGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalGroupsCompleted(this, new RentalGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CoverageTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CoverageType[] CoverageTypes() {
            object[] results = this.Invoke("CoverageTypes", new object[0]);
            return ((CoverageType[])(results[0]));
        }
        
        /// <remarks/>
        public void CoverageTypesAsync() {
            this.CoverageTypesAsync(null);
        }
        
        /// <remarks/>
        public void CoverageTypesAsync(object userState) {
            if ((this.CoverageTypesOperationCompleted == null)) {
                this.CoverageTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCoverageTypesOperationCompleted);
            }
            this.InvokeAsync("CoverageTypes", new object[0], this.CoverageTypesOperationCompleted, userState);
        }
        
        private void OnCoverageTypesOperationCompleted(object arg) {
            if ((this.CoverageTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CoverageTypesCompleted(this, new CoverageTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EquipTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EquipType[] EquipTypes() {
            object[] results = this.Invoke("EquipTypes", new object[0]);
            return ((EquipType[])(results[0]));
        }
        
        /// <remarks/>
        public void EquipTypesAsync() {
            this.EquipTypesAsync(null);
        }
        
        /// <remarks/>
        public void EquipTypesAsync(object userState) {
            if ((this.EquipTypesOperationCompleted == null)) {
                this.EquipTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEquipTypesOperationCompleted);
            }
            this.InvokeAsync("EquipTypes", new object[0], this.EquipTypesOperationCompleted, userState);
        }
        
        private void OnEquipTypesOperationCompleted(object arg) {
            if ((this.EquipTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EquipTypesCompleted(this, new EquipTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Purposes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Purpose[] Purposes() {
            object[] results = this.Invoke("Purposes", new object[0]);
            return ((Purpose[])(results[0]));
        }
        
        /// <remarks/>
        public void PurposesAsync() {
            this.PurposesAsync(null);
        }
        
        /// <remarks/>
        public void PurposesAsync(object userState) {
            if ((this.PurposesOperationCompleted == null)) {
                this.PurposesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurposesOperationCompleted);
            }
            this.InvokeAsync("Purposes", new object[0], this.PurposesOperationCompleted, userState);
        }
        
        private void OnPurposesOperationCompleted(object arg) {
            if ((this.PurposesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurposesCompleted(this, new PurposesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InformationTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InformationType[] InformationTypes() {
            object[] results = this.Invoke("InformationTypes", new object[0]);
            return ((InformationType[])(results[0]));
        }
        
        /// <remarks/>
        public void InformationTypesAsync() {
            this.InformationTypesAsync(null);
        }
        
        /// <remarks/>
        public void InformationTypesAsync(object userState) {
            if ((this.InformationTypesOperationCompleted == null)) {
                this.InformationTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInformationTypesOperationCompleted);
            }
            this.InvokeAsync("InformationTypes", new object[0], this.InformationTypesOperationCompleted, userState);
        }
        
        private void OnInformationTypesOperationCompleted(object arg) {
            if ((this.InformationTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InformationTypesCompleted(this, new InformationTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rental[] RentalsList(string codes) {
            object[] results = this.Invoke("RentalsList", new object[] {
                        codes});
            return ((Rental[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalsListAsync(string codes) {
            this.RentalsListAsync(codes, null);
        }
        
        /// <remarks/>
        public void RentalsListAsync(string codes, object userState) {
            if ((this.RentalsListOperationCompleted == null)) {
                this.RentalsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalsListOperationCompleted);
            }
            this.InvokeAsync("RentalsList", new object[] {
                        codes}, this.RentalsListOperationCompleted, userState);
        }
        
        private void OnRentalsListOperationCompleted(object arg) {
            if ((this.RentalsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalsListCompleted(this, new RentalsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RentalsList2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rental[] RentalsList2(int code, string codes) {
            object[] results = this.Invoke("RentalsList2", new object[] {
                        code,
                        codes});
            return ((Rental[])(results[0]));
        }
        
        /// <remarks/>
        public void RentalsList2Async(int code, string codes) {
            this.RentalsList2Async(code, codes, null);
        }
        
        /// <remarks/>
        public void RentalsList2Async(int code, string codes, object userState) {
            if ((this.RentalsList2OperationCompleted == null)) {
                this.RentalsList2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRentalsList2OperationCompleted);
            }
            this.InvokeAsync("RentalsList2", new object[] {
                        code,
                        codes}, this.RentalsList2OperationCompleted, userState);
        }
        
        private void OnRentalsList2OperationCompleted(object arg) {
            if ((this.RentalsList2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RentalsList2Completed(this, new RentalsList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GroupsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GroupsList(string codes) {
            object[] results = this.Invoke("GroupsList", new object[] {
                        codes});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupsListAsync(string codes) {
            this.GroupsListAsync(codes, null);
        }
        
        /// <remarks/>
        public void GroupsListAsync(string codes, object userState) {
            if ((this.GroupsListOperationCompleted == null)) {
                this.GroupsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupsListOperationCompleted);
            }
            this.InvokeAsync("GroupsList", new object[] {
                        codes}, this.GroupsListOperationCompleted, userState);
        }
        
        private void OnGroupsListOperationCompleted(object arg) {
            if ((this.GroupsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupsListCompleted(this, new GroupsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CoverageTypesList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CoverageType[] CoverageTypesList(string codes) {
            object[] results = this.Invoke("CoverageTypesList", new object[] {
                        codes});
            return ((CoverageType[])(results[0]));
        }
        
        /// <remarks/>
        public void CoverageTypesListAsync(string codes) {
            this.CoverageTypesListAsync(codes, null);
        }
        
        /// <remarks/>
        public void CoverageTypesListAsync(string codes, object userState) {
            if ((this.CoverageTypesListOperationCompleted == null)) {
                this.CoverageTypesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCoverageTypesListOperationCompleted);
            }
            this.InvokeAsync("CoverageTypesList", new object[] {
                        codes}, this.CoverageTypesListOperationCompleted, userState);
        }
        
        private void OnCoverageTypesListOperationCompleted(object arg) {
            if ((this.CoverageTypesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CoverageTypesListCompleted(this, new CoverageTypesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EquipTypesList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EquipType[] EquipTypesList(string codes) {
            object[] results = this.Invoke("EquipTypesList", new object[] {
                        codes});
            return ((EquipType[])(results[0]));
        }
        
        /// <remarks/>
        public void EquipTypesListAsync(string codes) {
            this.EquipTypesListAsync(codes, null);
        }
        
        /// <remarks/>
        public void EquipTypesListAsync(string codes, object userState) {
            if ((this.EquipTypesListOperationCompleted == null)) {
                this.EquipTypesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEquipTypesListOperationCompleted);
            }
            this.InvokeAsync("EquipTypesList", new object[] {
                        codes}, this.EquipTypesListOperationCompleted, userState);
        }
        
        private void OnEquipTypesListOperationCompleted(object arg) {
            if ((this.EquipTypesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EquipTypesListCompleted(this, new EquipTypesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PurposesList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Purpose[] PurposesList(string codes) {
            object[] results = this.Invoke("PurposesList", new object[] {
                        codes});
            return ((Purpose[])(results[0]));
        }
        
        /// <remarks/>
        public void PurposesListAsync(string codes) {
            this.PurposesListAsync(codes, null);
        }
        
        /// <remarks/>
        public void PurposesListAsync(string codes, object userState) {
            if ((this.PurposesListOperationCompleted == null)) {
                this.PurposesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurposesListOperationCompleted);
            }
            this.InvokeAsync("PurposesList", new object[] {
                        codes}, this.PurposesListOperationCompleted, userState);
        }
        
        private void OnPurposesListOperationCompleted(object arg) {
            if ((this.PurposesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurposesListCompleted(this, new PurposesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Countries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Country[] Countries() {
            object[] results = this.Invoke("Countries", new object[0]);
            return ((Country[])(results[0]));
        }
        
        /// <remarks/>
        public void CountriesAsync() {
            this.CountriesAsync(null);
        }
        
        /// <remarks/>
        public void CountriesAsync(object userState) {
            if ((this.CountriesOperationCompleted == null)) {
                this.CountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountriesOperationCompleted);
            }
            this.InvokeAsync("Countries", new object[0], this.CountriesOperationCompleted, userState);
        }
        
        private void OnCountriesOperationCompleted(object arg) {
            if ((this.CountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountriesCompleted(this, new CountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Cities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public City[] Cities() {
            object[] results = this.Invoke("Cities", new object[0]);
            return ((City[])(results[0]));
        }
        
        /// <remarks/>
        public void CitiesAsync() {
            this.CitiesAsync(null);
        }
        
        /// <remarks/>
        public void CitiesAsync(object userState) {
            if ((this.CitiesOperationCompleted == null)) {
                this.CitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCitiesOperationCompleted);
            }
            this.InvokeAsync("Cities", new object[0], this.CitiesOperationCompleted, userState);
        }
        
        private void OnCitiesOperationCompleted(object arg) {
            if ((this.CitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CitiesCompleted(this, new CitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CitiesInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public City[] CitiesInternational() {
            object[] results = this.Invoke("CitiesInternational", new object[0]);
            return ((City[])(results[0]));
        }
        
        /// <remarks/>
        public void CitiesInternationalAsync() {
            this.CitiesInternationalAsync(null);
        }
        
        /// <remarks/>
        public void CitiesInternationalAsync(object userState) {
            if ((this.CitiesInternationalOperationCompleted == null)) {
                this.CitiesInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCitiesInternationalOperationCompleted);
            }
            this.InvokeAsync("CitiesInternational", new object[0], this.CitiesInternationalOperationCompleted, userState);
        }
        
        private void OnCitiesInternationalOperationCompleted(object arg) {
            if ((this.CitiesInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CitiesInternationalCompleted(this, new CitiesInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CitiesState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public City[] CitiesState(int state) {
            object[] results = this.Invoke("CitiesState", new object[] {
                        state});
            return ((City[])(results[0]));
        }
        
        /// <remarks/>
        public void CitiesStateAsync(int state) {
            this.CitiesStateAsync(state, null);
        }
        
        /// <remarks/>
        public void CitiesStateAsync(int state, object userState) {
            if ((this.CitiesStateOperationCompleted == null)) {
                this.CitiesStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCitiesStateOperationCompleted);
            }
            this.InvokeAsync("CitiesState", new object[] {
                        state}, this.CitiesStateOperationCompleted, userState);
        }
        
        private void OnCitiesStateOperationCompleted(object arg) {
            if ((this.CitiesStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CitiesStateCompleted(this, new CitiesStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CitiesCountry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public City[] CitiesCountry(int country) {
            object[] results = this.Invoke("CitiesCountry", new object[] {
                        country});
            return ((City[])(results[0]));
        }
        
        /// <remarks/>
        public void CitiesCountryAsync(int country) {
            this.CitiesCountryAsync(country, null);
        }
        
        /// <remarks/>
        public void CitiesCountryAsync(int country, object userState) {
            if ((this.CitiesCountryOperationCompleted == null)) {
                this.CitiesCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCitiesCountryOperationCompleted);
            }
            this.InvokeAsync("CitiesCountry", new object[] {
                        country}, this.CitiesCountryOperationCompleted, userState);
        }
        
        private void OnCitiesCountryOperationCompleted(object arg) {
            if ((this.CitiesCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CitiesCountryCompleted(this, new CitiesCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Airports", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] Airports() {
            object[] results = this.Invoke("Airports", new object[0]);
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void AirportsAsync() {
            this.AirportsAsync(null);
        }
        
        /// <remarks/>
        public void AirportsAsync(object userState) {
            if ((this.AirportsOperationCompleted == null)) {
                this.AirportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirportsOperationCompleted);
            }
            this.InvokeAsync("Airports", new object[0], this.AirportsOperationCompleted, userState);
        }
        
        private void OnAirportsOperationCompleted(object arg) {
            if ((this.AirportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirportsCompleted(this, new AirportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AirportsInternational", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] AirportsInternational() {
            object[] results = this.Invoke("AirportsInternational", new object[0]);
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void AirportsInternationalAsync() {
            this.AirportsInternationalAsync(null);
        }
        
        /// <remarks/>
        public void AirportsInternationalAsync(object userState) {
            if ((this.AirportsInternationalOperationCompleted == null)) {
                this.AirportsInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirportsInternationalOperationCompleted);
            }
            this.InvokeAsync("AirportsInternational", new object[0], this.AirportsInternationalOperationCompleted, userState);
        }
        
        private void OnAirportsInternationalOperationCompleted(object arg) {
            if ((this.AirportsInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirportsInternationalCompleted(this, new AirportsInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AirportsCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] AirportsCity(int city) {
            object[] results = this.Invoke("AirportsCity", new object[] {
                        city});
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void AirportsCityAsync(int city) {
            this.AirportsCityAsync(city, null);
        }
        
        /// <remarks/>
        public void AirportsCityAsync(int city, object userState) {
            if ((this.AirportsCityOperationCompleted == null)) {
                this.AirportsCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirportsCityOperationCompleted);
            }
            this.InvokeAsync("AirportsCity", new object[] {
                        city}, this.AirportsCityOperationCompleted, userState);
        }
        
        private void OnAirportsCityOperationCompleted(object arg) {
            if ((this.AirportsCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirportsCityCompleted(this, new AirportsCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AirportsState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] AirportsState(int state) {
            object[] results = this.Invoke("AirportsState", new object[] {
                        state});
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void AirportsStateAsync(int state) {
            this.AirportsStateAsync(state, null);
        }
        
        /// <remarks/>
        public void AirportsStateAsync(int state, object userState) {
            if ((this.AirportsStateOperationCompleted == null)) {
                this.AirportsStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirportsStateOperationCompleted);
            }
            this.InvokeAsync("AirportsState", new object[] {
                        state}, this.AirportsStateOperationCompleted, userState);
        }
        
        private void OnAirportsStateOperationCompleted(object arg) {
            if ((this.AirportsStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirportsStateCompleted(this, new AirportsStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AirportsCountry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] AirportsCountry(int country) {
            object[] results = this.Invoke("AirportsCountry", new object[] {
                        country});
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void AirportsCountryAsync(int country) {
            this.AirportsCountryAsync(country, null);
        }
        
        /// <remarks/>
        public void AirportsCountryAsync(int country, object userState) {
            if ((this.AirportsCountryOperationCompleted == null)) {
                this.AirportsCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirportsCountryOperationCompleted);
            }
            this.InvokeAsync("AirportsCountry", new object[] {
                        country}, this.AirportsCountryOperationCompleted, userState);
        }
        
        private void OnAirportsCountryOperationCompleted(object arg) {
            if ((this.AirportsCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirportsCountryCompleted(this, new AirportsCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Countries2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Country[] Countries2(int code, string rentalsCodes) {
            object[] results = this.Invoke("Countries2", new object[] {
                        code,
                        rentalsCodes});
            return ((Country[])(results[0]));
        }
        
        /// <remarks/>
        public void Countries2Async(int code, string rentalsCodes) {
            this.Countries2Async(code, rentalsCodes, null);
        }
        
        /// <remarks/>
        public void Countries2Async(int code, string rentalsCodes, object userState) {
            if ((this.Countries2OperationCompleted == null)) {
                this.Countries2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountries2OperationCompleted);
            }
            this.InvokeAsync("Countries2", new object[] {
                        code,
                        rentalsCodes}, this.Countries2OperationCompleted, userState);
        }
        
        private void OnCountries2OperationCompleted(object arg) {
            if ((this.Countries2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Countries2Completed(this, new Countries2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Cities2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public City[] Cities2(int code, string rentalsCodes) {
            object[] results = this.Invoke("Cities2", new object[] {
                        code,
                        rentalsCodes});
            return ((City[])(results[0]));
        }
        
        /// <remarks/>
        public void Cities2Async(int code, string rentalsCodes) {
            this.Cities2Async(code, rentalsCodes, null);
        }
        
        /// <remarks/>
        public void Cities2Async(int code, string rentalsCodes, object userState) {
            if ((this.Cities2OperationCompleted == null)) {
                this.Cities2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCities2OperationCompleted);
            }
            this.InvokeAsync("Cities2", new object[] {
                        code,
                        rentalsCodes}, this.Cities2OperationCompleted, userState);
        }
        
        private void OnCities2OperationCompleted(object arg) {
            if ((this.Cities2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Cities2Completed(this, new Cities2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CitiesInternational2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public City[] CitiesInternational2(int code, string rentalsCodes) {
            object[] results = this.Invoke("CitiesInternational2", new object[] {
                        code,
                        rentalsCodes});
            return ((City[])(results[0]));
        }
        
        /// <remarks/>
        public void CitiesInternational2Async(int code, string rentalsCodes) {
            this.CitiesInternational2Async(code, rentalsCodes, null);
        }
        
        /// <remarks/>
        public void CitiesInternational2Async(int code, string rentalsCodes, object userState) {
            if ((this.CitiesInternational2OperationCompleted == null)) {
                this.CitiesInternational2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCitiesInternational2OperationCompleted);
            }
            this.InvokeAsync("CitiesInternational2", new object[] {
                        code,
                        rentalsCodes}, this.CitiesInternational2OperationCompleted, userState);
        }
        
        private void OnCitiesInternational2OperationCompleted(object arg) {
            if ((this.CitiesInternational2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CitiesInternational2Completed(this, new CitiesInternational2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CitiesState2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public City[] CitiesState2(int code, string rentalsCodes, int state) {
            object[] results = this.Invoke("CitiesState2", new object[] {
                        code,
                        rentalsCodes,
                        state});
            return ((City[])(results[0]));
        }
        
        /// <remarks/>
        public void CitiesState2Async(int code, string rentalsCodes, int state) {
            this.CitiesState2Async(code, rentalsCodes, state, null);
        }
        
        /// <remarks/>
        public void CitiesState2Async(int code, string rentalsCodes, int state, object userState) {
            if ((this.CitiesState2OperationCompleted == null)) {
                this.CitiesState2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCitiesState2OperationCompleted);
            }
            this.InvokeAsync("CitiesState2", new object[] {
                        code,
                        rentalsCodes,
                        state}, this.CitiesState2OperationCompleted, userState);
        }
        
        private void OnCitiesState2OperationCompleted(object arg) {
            if ((this.CitiesState2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CitiesState2Completed(this, new CitiesState2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CitiesCountry2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public City[] CitiesCountry2(int code, string rentalsCodes, int country) {
            object[] results = this.Invoke("CitiesCountry2", new object[] {
                        code,
                        rentalsCodes,
                        country});
            return ((City[])(results[0]));
        }
        
        /// <remarks/>
        public void CitiesCountry2Async(int code, string rentalsCodes, int country) {
            this.CitiesCountry2Async(code, rentalsCodes, country, null);
        }
        
        /// <remarks/>
        public void CitiesCountry2Async(int code, string rentalsCodes, int country, object userState) {
            if ((this.CitiesCountry2OperationCompleted == null)) {
                this.CitiesCountry2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCitiesCountry2OperationCompleted);
            }
            this.InvokeAsync("CitiesCountry2", new object[] {
                        code,
                        rentalsCodes,
                        country}, this.CitiesCountry2OperationCompleted, userState);
        }
        
        private void OnCitiesCountry2OperationCompleted(object arg) {
            if ((this.CitiesCountry2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CitiesCountry2Completed(this, new CitiesCountry2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Airports2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] Airports2(int code, string rentalsCodes) {
            object[] results = this.Invoke("Airports2", new object[] {
                        code,
                        rentalsCodes});
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void Airports2Async(int code, string rentalsCodes) {
            this.Airports2Async(code, rentalsCodes, null);
        }
        
        /// <remarks/>
        public void Airports2Async(int code, string rentalsCodes, object userState) {
            if ((this.Airports2OperationCompleted == null)) {
                this.Airports2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirports2OperationCompleted);
            }
            this.InvokeAsync("Airports2", new object[] {
                        code,
                        rentalsCodes}, this.Airports2OperationCompleted, userState);
        }
        
        private void OnAirports2OperationCompleted(object arg) {
            if ((this.Airports2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Airports2Completed(this, new Airports2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AirportsInternational2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] AirportsInternational2(int code, string rentalsCodes) {
            object[] results = this.Invoke("AirportsInternational2", new object[] {
                        code,
                        rentalsCodes});
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void AirportsInternational2Async(int code, string rentalsCodes) {
            this.AirportsInternational2Async(code, rentalsCodes, null);
        }
        
        /// <remarks/>
        public void AirportsInternational2Async(int code, string rentalsCodes, object userState) {
            if ((this.AirportsInternational2OperationCompleted == null)) {
                this.AirportsInternational2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirportsInternational2OperationCompleted);
            }
            this.InvokeAsync("AirportsInternational2", new object[] {
                        code,
                        rentalsCodes}, this.AirportsInternational2OperationCompleted, userState);
        }
        
        private void OnAirportsInternational2OperationCompleted(object arg) {
            if ((this.AirportsInternational2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirportsInternational2Completed(this, new AirportsInternational2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AirportsCity2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] AirportsCity2(int code, string rentalsCodes, int city) {
            object[] results = this.Invoke("AirportsCity2", new object[] {
                        code,
                        rentalsCodes,
                        city});
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void AirportsCity2Async(int code, string rentalsCodes, int city) {
            this.AirportsCity2Async(code, rentalsCodes, city, null);
        }
        
        /// <remarks/>
        public void AirportsCity2Async(int code, string rentalsCodes, int city, object userState) {
            if ((this.AirportsCity2OperationCompleted == null)) {
                this.AirportsCity2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirportsCity2OperationCompleted);
            }
            this.InvokeAsync("AirportsCity2", new object[] {
                        code,
                        rentalsCodes,
                        city}, this.AirportsCity2OperationCompleted, userState);
        }
        
        private void OnAirportsCity2OperationCompleted(object arg) {
            if ((this.AirportsCity2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirportsCity2Completed(this, new AirportsCity2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AirportsState2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Airport[] AirportsState2(int code, string rentalsCodes, int state) {
            object[] results = this.Invoke("AirportsState2", new object[] {
                        code,
                        rentalsCodes,
                        state});
            return ((Airport[])(results[0]));
        }
        
        /// <remarks/>
        public void AirportsState2Async(int code, string rentalsCodes, int state) {
            this.AirportsState2Async(code, rentalsCodes, state, null);
        }
        
        /// <remarks/>
        public void AirportsState2Async(int code, string rentalsCodes, int state, object userState) {
            if ((this.AirportsState2OperationCompleted == null)) {
                this.AirportsState2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirportsState2OperationCompleted);
            }
            this.InvokeAsync("AirportsState2", new object[] {
                        code,
                        rentalsCodes,
                        state}, this.AirportsState2OperationCompleted, userState);
        }
        
        private void OnAirportsState2OperationCompleted(object arg) {
            if ((this.AirportsState2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirportsState2Completed(this, new AirportsState2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Airport {
        
        private string codeField;
        
        private string icaoField;
        
        private string nameField;
        
        private string shortNameField;
        
        private string cityField;
        
        private string stateField;
        
        private string stateCodeField;
        
        private string countryNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Icao {
            get {
                return this.icaoField;
            }
            set {
                this.icaoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ShortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StateCode {
            get {
                return this.stateCodeField;
            }
            set {
                this.stateCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Country {
        
        private int codeField;
        
        private string nameField;
        
        private string name2Field;
        
        private string iso3166T1A2Field;
        
        private string iso3166T1A3Field;
        
        private int iso3166Field;
        
        private string iso3166T2A2Field;
        
        private string currencyField;
        
        private int currencyCodeField;
        
        private string iso4217Field;
        
        private string iso639Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name2 {
            get {
                return this.name2Field;
            }
            set {
                this.name2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Iso3166T1A2 {
            get {
                return this.iso3166T1A2Field;
            }
            set {
                this.iso3166T1A2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Iso3166T1A3 {
            get {
                return this.iso3166T1A3Field;
            }
            set {
                this.iso3166T1A3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Iso3166 {
            get {
                return this.iso3166Field;
            }
            set {
                this.iso3166Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Iso3166T2A2 {
            get {
                return this.iso3166T2A2Field;
            }
            set {
                this.iso3166T2A2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Iso4217 {
            get {
                return this.iso4217Field;
            }
            set {
                this.iso4217Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Iso639 {
            get {
                return this.iso639Field;
            }
            set {
                this.iso639Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InformationType {
        
        private string nameField;
        
        private int codeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Purpose {
        
        private string nameField;
        
        private string name2Field;
        
        private bool informativeField;
        
        private int codeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Name2 {
            get {
                return this.name2Field;
            }
            set {
                this.name2Field = value;
            }
        }
        
        /// <remarks/>
        public bool Informative {
            get {
                return this.informativeField;
            }
            set {
                this.informativeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EquipType {
        
        private string nameField;
        
        private string name2Field;
        
        private string name3Field;
        
        private int codeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Name2 {
            get {
                return this.name2Field;
            }
            set {
                this.name2Field = value;
            }
        }
        
        /// <remarks/>
        public string Name3 {
            get {
                return this.name3Field;
            }
            set {
                this.name3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CoverageTypeRules {
        
        private string mayCombineField;
        
        private string mayCombine2Field;
        
        private bool requiredField;
        
        /// <remarks/>
        public string MayCombine {
            get {
                return this.mayCombineField;
            }
            set {
                this.mayCombineField = value;
            }
        }
        
        /// <remarks/>
        public string MayCombine2 {
            get {
                return this.mayCombine2Field;
            }
            set {
                this.mayCombine2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CoverageType {
        
        private string nameField;
        
        private string descriptionField;
        
        private string description2Field;
        
        private string description3Field;
        
        private string definitionField;
        
        private string textField;
        
        private string text2Field;
        
        private string text3Field;
        
        private CoverageTypeRules rulesField;
        
        private int codeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Description2 {
            get {
                return this.description2Field;
            }
            set {
                this.description2Field = value;
            }
        }
        
        /// <remarks/>
        public string Description3 {
            get {
                return this.description3Field;
            }
            set {
                this.description3Field = value;
            }
        }
        
        /// <remarks/>
        public string Definition {
            get {
                return this.definitionField;
            }
            set {
                this.definitionField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public string Text2 {
            get {
                return this.text2Field;
            }
            set {
                this.text2Field = value;
            }
        }
        
        /// <remarks/>
        public string Text3 {
            get {
                return this.text3Field;
            }
            set {
                this.text3Field = value;
            }
        }
        
        /// <remarks/>
        public CoverageTypeRules Rules {
            get {
                return this.rulesField;
            }
            set {
                this.rulesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RentalGroup))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Group {
        
        private int codeField;
        
        private string nameField;
        
        private string name2Field;
        
        private string name3Field;
        
        private string transmissionTypeField;
        
        private bool transmissionAutomaticField;
        
        private int sizeField;
        
        private int size2Field;
        
        private int size3Field;
        
        private string sizeNameField;
        
        private int vehicleCategoryField;
        
        private int vehicleCategory2Field;
        
        private int vehicleCategory3Field;
        
        private string vehicleCategoryNameField;
        
        private bool airConditionIndField;
        
        private string descriptionField;
        
        private string doorCountField;
        
        private string passangersField;
        
        private int bagsField;
        
        private bool electricWindowsField;
        
        private bool electricDoorLocksField;
        
        private bool powerSteeringField;
        
        private string modelsField;
        
        private string models2Field;
        
        private string models3Field;
        
        private string sippField;
        
        private string classField;
        
        private string pictureUrlField;
        
        private string driveTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name2 {
            get {
                return this.name2Field;
            }
            set {
                this.name2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name3 {
            get {
                return this.name3Field;
            }
            set {
                this.name3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TransmissionType {
            get {
                return this.transmissionTypeField;
            }
            set {
                this.transmissionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool TransmissionAutomatic {
            get {
                return this.transmissionAutomaticField;
            }
            set {
                this.transmissionAutomaticField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Size2 {
            get {
                return this.size2Field;
            }
            set {
                this.size2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Size3 {
            get {
                return this.size3Field;
            }
            set {
                this.size3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SizeName {
            get {
                return this.sizeNameField;
            }
            set {
                this.sizeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int VehicleCategory {
            get {
                return this.vehicleCategoryField;
            }
            set {
                this.vehicleCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int VehicleCategory2 {
            get {
                return this.vehicleCategory2Field;
            }
            set {
                this.vehicleCategory2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int VehicleCategory3 {
            get {
                return this.vehicleCategory3Field;
            }
            set {
                this.vehicleCategory3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string VehicleCategoryName {
            get {
                return this.vehicleCategoryNameField;
            }
            set {
                this.vehicleCategoryNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool AirConditionInd {
            get {
                return this.airConditionIndField;
            }
            set {
                this.airConditionIndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DoorCount {
            get {
                return this.doorCountField;
            }
            set {
                this.doorCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Passangers {
            get {
                return this.passangersField;
            }
            set {
                this.passangersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Bags {
            get {
                return this.bagsField;
            }
            set {
                this.bagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ElectricWindows {
            get {
                return this.electricWindowsField;
            }
            set {
                this.electricWindowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ElectricDoorLocks {
            get {
                return this.electricDoorLocksField;
            }
            set {
                this.electricDoorLocksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PowerSteering {
            get {
                return this.powerSteeringField;
            }
            set {
                this.powerSteeringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Models {
            get {
                return this.modelsField;
            }
            set {
                this.modelsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Models2 {
            get {
                return this.models2Field;
            }
            set {
                this.models2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Models3 {
            get {
                return this.models3Field;
            }
            set {
                this.models3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Sipp {
            get {
                return this.sippField;
            }
            set {
                this.sippField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PictureUrl {
            get {
                return this.pictureUrlField;
            }
            set {
                this.pictureUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DriveType {
            get {
                return this.driveTypeField;
            }
            set {
                this.driveTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RentalGroup : Group {
        
        private int modelCodeField;
        
        private string modelNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ModelCode {
            get {
                return this.modelCodeField;
            }
            set {
                this.modelCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ModelName {
            get {
                return this.modelNameField;
            }
            set {
                this.modelNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Airline {
        
        private string codeField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DsItem {
        
        private int codeField;
        
        private string valueField;
        
        private string value2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class HolidaySchedule {
        
        private System.DateTime dateField;
        
        private string descriptionField;
        
        private string startField;
        
        private string endField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string End {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WeekSchedule {
        
        private int weekDayField;
        
        private string startField;
        
        private string endField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int WeekDay {
            get {
                return this.weekDayField;
            }
            set {
                this.weekDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string End {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LocationSchedule {
        
        private LocationDetails locationDetailsField;
        
        private WeekSchedule[] weekScheduleField;
        
        private HolidaySchedule[] holidayScheduleField;
        
        /// <remarks/>
        public LocationDetails LocationDetails {
            get {
                return this.locationDetailsField;
            }
            set {
                this.locationDetailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WeekSchedule")]
        public WeekSchedule[] WeekSchedule {
            get {
                return this.weekScheduleField;
            }
            set {
                this.weekScheduleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HolidaySchedule")]
        public HolidaySchedule[] HolidaySchedule {
            get {
                return this.holidayScheduleField;
            }
            set {
                this.holidayScheduleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LocationDetails {
        
        private Position positionField;
        
        private Address addressField;
        
        private Telephone telephoneField;
        
        private string emailField;
        
        private string nameField;
        
        private string codeField;
        
        private string codeContextField;
        
        private bool atAirportField;
        
        private string airportField;
        
        /// <remarks/>
        public Position Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public Address Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public Telephone Telephone {
            get {
                return this.telephoneField;
            }
            set {
                this.telephoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CodeContext {
            get {
                return this.codeContextField;
            }
            set {
                this.codeContextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool AtAirport {
            get {
                return this.atAirportField;
            }
            set {
                this.atAirportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Airport {
            get {
                return this.airportField;
            }
            set {
                this.airportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Position {
        
        private decimal longitudeField;
        
        private decimal latitudeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Address {
        
        private string[] addressLineField;
        
        private string countyField;
        
        private string cityNameField;
        
        private string postalCodeField;
        
        private StateProv stateProvField;
        
        private string countryNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AddressLine")]
        public string[] AddressLine {
            get {
                return this.addressLineField;
            }
            set {
                this.addressLineField = value;
            }
        }
        
        /// <remarks/>
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string CityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public StateProv StateProv {
            get {
                return this.stateProvField;
            }
            set {
                this.stateProvField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StateProv {
        
        private string stateCodeField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StateCode {
            get {
                return this.stateCodeField;
            }
            set {
                this.stateCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Telephone {
        
        private string countryAccessCodeField;
        
        private string areaCityCodeField;
        
        private string phoneNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CountryAccessCode {
            get {
                return this.countryAccessCodeField;
            }
            set {
                this.countryAccessCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AreaCityCode {
            get {
                return this.areaCityCodeField;
            }
            set {
                this.areaCityCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Rental {
        
        private Address[] addressField;
        
        private Telephone telephoneField;
        
        private string pictureUrlField;
        
        private string nameField;
        
        private int codeField;
        
        private string companyShortNameField;
        
        private string codeContextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Address")]
        public Address[] Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public Telephone Telephone {
            get {
                return this.telephoneField;
            }
            set {
                this.telephoneField = value;
            }
        }
        
        /// <remarks/>
        public string PictureUrl {
            get {
                return this.pictureUrlField;
            }
            set {
                this.pictureUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CompanyShortName {
            get {
                return this.companyShortNameField;
            }
            set {
                this.companyShortNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CodeContext {
            get {
                return this.codeContextField;
            }
            set {
                this.codeContextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class City {
        
        private string codeField;
        
        private string nameField;
        
        private string stateField;
        
        private string stateCodeField;
        
        private bool stateCapitalField;
        
        private string countryField;
        
        private bool countryCapitalField;
        
        private bool implicitField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StateCode {
            get {
                return this.stateCodeField;
            }
            set {
                this.stateCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool StateCapital {
            get {
                return this.stateCapitalField;
            }
            set {
                this.stateCapitalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool CountryCapital {
            get {
                return this.countryCapitalField;
            }
            set {
                this.countryCapitalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Implicit {
            get {
                return this.implicitField;
            }
            set {
                this.implicitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AirportsCountry2CompletedEventHandler(object sender, AirportsCountry2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirportsCountry2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirportsCountry2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SearchCodeByCityNameCompletedEventHandler(object sender, SearchCodeByCityNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCodeByCityNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCodeByCityNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SearchCityCompletedEventHandler(object sender, SearchCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public City[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((City[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SearchCityJQueryCompletedEventHandler(object sender, SearchCityJQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCityJQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCityJQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public City[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((City[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SearchCityNameCompletedEventHandler(object sender, SearchCityNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCityNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCityNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SearchCityNameJQueryCompletedEventHandler(object sender, SearchCityNameJQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCityNameJQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCityNameJQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalsCompletedEventHandler(object sender, RentalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rental[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rental[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalsCityCompletedEventHandler(object sender, RentalsCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalsCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalsCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rental[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rental[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalsCountryCompletedEventHandler(object sender, RentalsCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalsCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalsCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rental[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rental[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalsInternationalCompletedEventHandler(object sender, RentalsInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalsInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalsInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rental[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rental[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Rentals2CompletedEventHandler(object sender, Rentals2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Rentals2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Rentals2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rental[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rental[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalsCity2CompletedEventHandler(object sender, RentalsCity2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalsCity2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalsCity2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rental[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rental[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalsCountry2CompletedEventHandler(object sender, RentalsCountry2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalsCountry2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalsCountry2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rental[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rental[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalsInternational2CompletedEventHandler(object sender, RentalsInternational2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalsInternational2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalsInternational2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rental[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rental[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalLocationsCompletedEventHandler(object sender, RentalLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalLocationsCountryCompletedEventHandler(object sender, RentalLocationsCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalLocationsCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalLocationsCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalLocationsInternationalCompletedEventHandler(object sender, RentalLocationsInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalLocationsInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalLocationsInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalLocationsCityCompletedEventHandler(object sender, RentalLocationsCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalLocationsCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalLocationsCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalInfoCompletedEventHandler(object sender, RentalInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalInfoInternationalCompletedEventHandler(object sender, RentalInfoInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalInfoInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalInfoInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSchedulesCompletedEventHandler(object sender, RentalSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSchedulesCountryCompletedEventHandler(object sender, RentalSchedulesCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSchedulesCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSchedulesCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSchedulesInternationalCompletedEventHandler(object sender, RentalSchedulesInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSchedulesInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSchedulesInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSchedulesCityCompletedEventHandler(object sender, RentalSchedulesCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSchedulesCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSchedulesCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LocationCompletedEventHandler(object sender, LocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LocationInfoCompletedEventHandler(object sender, LocationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LocationInfoInternationalCompletedEventHandler(object sender, LocationInfoInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationInfoInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationInfoInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LocationHolidaysCompletedEventHandler(object sender, LocationHolidaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationHolidaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationHolidaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HolidaySchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HolidaySchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LocationWeekCompletedEventHandler(object sender, LocationWeekCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationWeekCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationWeekCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WeekSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WeekSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CityWeekScheduleCompletedEventHandler(object sender, CityWeekScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CityWeekScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CityWeekScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WeekSchedule Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WeekSchedule)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalParameterCompletedEventHandler(object sender, RentalParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DsCurrenciesCompletedEventHandler(object sender, DsCurrenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DsCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DsCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DsItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DsItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DsCountriesCompletedEventHandler(object sender, DsCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DsCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DsCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DsItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DsItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DsStatesCountryCompletedEventHandler(object sender, DsStatesCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DsStatesCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DsStatesCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DsItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DsItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DsStatesCompletedEventHandler(object sender, DsStatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DsStatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DsStatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DsItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DsItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DsCitiesCompletedEventHandler(object sender, DsCitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DsCitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DsCitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DsItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DsItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DsAirlinesCompletedEventHandler(object sender, DsAirlinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DsAirlinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DsAirlinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airline[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airline[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DsAirportsCompletedEventHandler(object sender, DsAirportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DsAirportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DsAirportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DsAirportsCityCompletedEventHandler(object sender, DsAirportsCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DsAirportsCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DsAirportsCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DsAirportsStateCompletedEventHandler(object sender, DsAirportsStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DsAirportsStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DsAirportsStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DsAirportsCountryCompletedEventHandler(object sender, DsAirportsCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DsAirportsCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DsAirportsCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ChecksumAirportsCompletedEventHandler(object sender, ChecksumAirportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChecksumAirportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChecksumAirportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ChecksumCitiesCompletedEventHandler(object sender, ChecksumCitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChecksumCitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChecksumCitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ChecksumCountriesCompletedEventHandler(object sender, ChecksumCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChecksumCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChecksumCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ChecksumStatesCompletedEventHandler(object sender, ChecksumStatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChecksumStatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChecksumStatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ChecksumRentalsCompletedEventHandler(object sender, ChecksumRentalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChecksumRentalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChecksumRentalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ChecksumRentalLocationsCompletedEventHandler(object sender, ChecksumRentalLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChecksumRentalLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChecksumRentalLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void VersionCompletedEventHandler(object sender, VersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchCompletedEventHandler(object sender, SimpleSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchGroupRentalCompletedEventHandler(object sender, SimpleSearchGroupRentalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchGroupRentalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchGroupRentalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchWaitListCompletedEventHandler(object sender, SimpleSearchWaitListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchWaitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchWaitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchAirportCompletedEventHandler(object sender, SimpleSearchAirportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchAirportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchAirportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchEquipTypesCompletedEventHandler(object sender, SimpleSearchEquipTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchEquipTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchEquipTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchInternationalCompletedEventHandler(object sender, SimpleSearchInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchAutoCurrencyCompletedEventHandler(object sender, SimpleSearchAutoCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchAutoCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchAutoCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchInternational2CompletedEventHandler(object sender, SimpleSearchInternational2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchInternational2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchInternational2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchAutoCurrency2CompletedEventHandler(object sender, SimpleSearchAutoCurrency2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchAutoCurrency2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchAutoCurrency2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchInternational3CompletedEventHandler(object sender, SimpleSearchInternational3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchInternational3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchInternational3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchAutoCurrency3CompletedEventHandler(object sender, SimpleSearchAutoCurrency3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchAutoCurrency3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchAutoCurrency3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchInternational4CompletedEventHandler(object sender, SimpleSearchInternational4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchInternational4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchInternational4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SimpleSearchAutoCurrency4CompletedEventHandler(object sender, SimpleSearchAutoCurrency4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleSearchAutoCurrency4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleSearchAutoCurrency4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSearchCompletedEventHandler(object sender, RentalSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSearchGroupCompletedEventHandler(object sender, RentalSearchGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSearchGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSearchGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSearchWaitListCompletedEventHandler(object sender, RentalSearchWaitListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSearchWaitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSearchWaitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSearchEquipTypesCompletedEventHandler(object sender, RentalSearchEquipTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSearchEquipTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSearchEquipTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSearchInternationalCompletedEventHandler(object sender, RentalSearchInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSearchInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSearchInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSearchAutoCurrencyCompletedEventHandler(object sender, RentalSearchAutoCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSearchAutoCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSearchAutoCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSearchInternational2CompletedEventHandler(object sender, RentalSearchInternational2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSearchInternational2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSearchInternational2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSearchAutoCurrency2CompletedEventHandler(object sender, RentalSearchAutoCurrency2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSearchAutoCurrency2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSearchAutoCurrency2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSearchInternational3CompletedEventHandler(object sender, RentalSearchInternational3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSearchInternational3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSearchInternational3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSearchAutoCurrency3CompletedEventHandler(object sender, RentalSearchAutoCurrency3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSearchAutoCurrency3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSearchAutoCurrency3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSearchInternational4CompletedEventHandler(object sender, RentalSearchInternational4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSearchInternational4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSearchInternational4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalSearchAutoCurrency4CompletedEventHandler(object sender, RentalSearchAutoCurrency4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalSearchAutoCurrency4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalSearchAutoCurrency4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PassiveReserveCompletedEventHandler(object sender, PassiveReserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PassiveReserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PassiveReserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReserveCompletedEventHandler(object sender, ReserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReserveWaitlistCompletedEventHandler(object sender, ReserveWaitlistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveWaitlistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveWaitlistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReserveInternationalCompletedEventHandler(object sender, ReserveInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReserveAutoCurrencyCompletedEventHandler(object sender, ReserveAutoCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveAutoCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveAutoCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Reserve2CompletedEventHandler(object sender, Reserve2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Reserve2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Reserve2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReserveWaitlist2CompletedEventHandler(object sender, ReserveWaitlist2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveWaitlist2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveWaitlist2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReserveInternational2CompletedEventHandler(object sender, ReserveInternational2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveInternational2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveInternational2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReserveAutoCurrency2CompletedEventHandler(object sender, ReserveAutoCurrency2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveAutoCurrency2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveAutoCurrency2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReserveInternational3CompletedEventHandler(object sender, ReserveInternational3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveInternational3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveInternational3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReserveAutoCurrency3CompletedEventHandler(object sender, ReserveAutoCurrency3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveAutoCurrency3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveAutoCurrency3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PassiveCancelReserveCompletedEventHandler(object sender, PassiveCancelReserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PassiveCancelReserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PassiveCancelReserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelReserveCompletedEventHandler(object sender, CancelReserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelReserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelReserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelReserveInternationalCompletedEventHandler(object sender, CancelReserveInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelReserveInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelReserveInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelReserveAutoCurrencyCompletedEventHandler(object sender, CancelReserveAutoCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelReserveAutoCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelReserveAutoCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelReserveInternational2CompletedEventHandler(object sender, CancelReserveInternational2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelReserveInternational2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelReserveInternational2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelReserveAutoCurrency2CompletedEventHandler(object sender, CancelReserveAutoCurrency2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelReserveAutoCurrency2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelReserveAutoCurrency2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PassiveModifyReserveCompletedEventHandler(object sender, PassiveModifyReserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PassiveModifyReserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PassiveModifyReserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ModifyReserveCompletedEventHandler(object sender, ModifyReserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyReserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyReserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ModifyReserveInternationalCompletedEventHandler(object sender, ModifyReserveInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyReserveInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyReserveInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ModifyReserveAutoCurrencyCompletedEventHandler(object sender, ModifyReserveAutoCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyReserveAutoCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyReserveAutoCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ModifyReserveInternational2CompletedEventHandler(object sender, ModifyReserveInternational2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyReserveInternational2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyReserveInternational2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ModifyReserveAutoCurrency2CompletedEventHandler(object sender, ModifyReserveAutoCurrency2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyReserveAutoCurrency2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyReserveAutoCurrency2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PassiveViewReserveCompletedEventHandler(object sender, PassiveViewReserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PassiveViewReserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PassiveViewReserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ViewReserveCompletedEventHandler(object sender, ViewReserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViewReserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewReserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ViewReserveInternationalCompletedEventHandler(object sender, ViewReserveInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViewReserveInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewReserveInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ViewReserveAutoCurrencyCompletedEventHandler(object sender, ViewReserveAutoCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViewReserveAutoCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewReserveAutoCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ViewReserveInternational2CompletedEventHandler(object sender, ViewReserveInternational2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViewReserveInternational2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewReserveInternational2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ViewReserveAutoCurrency2CompletedEventHandler(object sender, ViewReserveAutoCurrency2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViewReserveAutoCurrency2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewReserveAutoCurrency2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GroupsCompletedEventHandler(object sender, GroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalGroupsCompletedEventHandler(object sender, RentalGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RentalGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RentalGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CoverageTypesCompletedEventHandler(object sender, CoverageTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CoverageTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CoverageTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CoverageType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CoverageType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void EquipTypesCompletedEventHandler(object sender, EquipTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EquipTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EquipTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EquipType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EquipType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PurposesCompletedEventHandler(object sender, PurposesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurposesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurposesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Purpose[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Purpose[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InformationTypesCompletedEventHandler(object sender, InformationTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InformationTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InformationTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InformationType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InformationType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalsListCompletedEventHandler(object sender, RentalsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rental[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rental[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RentalsList2CompletedEventHandler(object sender, RentalsList2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RentalsList2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RentalsList2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rental[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rental[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GroupsListCompletedEventHandler(object sender, GroupsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CoverageTypesListCompletedEventHandler(object sender, CoverageTypesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CoverageTypesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CoverageTypesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CoverageType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CoverageType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void EquipTypesListCompletedEventHandler(object sender, EquipTypesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EquipTypesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EquipTypesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EquipType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EquipType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PurposesListCompletedEventHandler(object sender, PurposesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurposesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurposesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Purpose[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Purpose[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CountriesCompletedEventHandler(object sender, CountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Country[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Country[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CitiesCompletedEventHandler(object sender, CitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public City[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((City[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CitiesInternationalCompletedEventHandler(object sender, CitiesInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CitiesInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CitiesInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public City[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((City[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CitiesStateCompletedEventHandler(object sender, CitiesStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CitiesStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CitiesStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public City[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((City[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CitiesCountryCompletedEventHandler(object sender, CitiesCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CitiesCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CitiesCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public City[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((City[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AirportsCompletedEventHandler(object sender, AirportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AirportsInternationalCompletedEventHandler(object sender, AirportsInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirportsInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirportsInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AirportsCityCompletedEventHandler(object sender, AirportsCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirportsCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirportsCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AirportsStateCompletedEventHandler(object sender, AirportsStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirportsStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirportsStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AirportsCountryCompletedEventHandler(object sender, AirportsCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirportsCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirportsCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Countries2CompletedEventHandler(object sender, Countries2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Countries2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Countries2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Country[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Country[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Cities2CompletedEventHandler(object sender, Cities2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Cities2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Cities2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public City[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((City[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CitiesInternational2CompletedEventHandler(object sender, CitiesInternational2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CitiesInternational2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CitiesInternational2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public City[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((City[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CitiesState2CompletedEventHandler(object sender, CitiesState2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CitiesState2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CitiesState2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public City[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((City[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CitiesCountry2CompletedEventHandler(object sender, CitiesCountry2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CitiesCountry2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CitiesCountry2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public City[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((City[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Airports2CompletedEventHandler(object sender, Airports2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Airports2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Airports2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AirportsInternational2CompletedEventHandler(object sender, AirportsInternational2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirportsInternational2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirportsInternational2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AirportsCity2CompletedEventHandler(object sender, AirportsCity2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirportsCity2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirportsCity2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AirportsState2CompletedEventHandler(object sender, AirportsState2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirportsState2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirportsState2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Airport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Airport[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591